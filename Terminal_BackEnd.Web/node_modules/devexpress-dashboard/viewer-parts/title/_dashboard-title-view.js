/**
* DevExpress Dashboard (_dashboard-title-view.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { createJQueryCallbacks } from '../../data/_jquery-helpers';
import { DashboardTitleToolbar } from '../widgets/caption-toolbar/_title-toolbar';
import { DashboardTitleToolbarAdapter } from './_dashboard-title-toolbar-adapter';
export class DashboardTitleView {
    constructor() {
        this.onUpdated = createJQueryCallbacks();
    }
    get _visible() {
        return this._titleViewModel && this._titleViewModel.Visible;
    }
    initialize(container, controlContainer, encodeHtml, options, titleViewModel) {
        this._options = options;
        this._titleViewModel = titleViewModel;
        if (this._visible) {
            this._captionToolbar = new DashboardTitleToolbar(container, controlContainer, container, encodeHtml);
        }
    }
    calcHeight(masterFilterValues) {
        if (this._visible) {
            let options = DashboardTitleToolbarAdapter.getTitleOptions(this._titleViewModel, masterFilterValues, this._options.showExportDialog, this._options.showParametersDialog, this._options.allowExport);
            this._raiseUpdated(options);
            return this._captionToolbar.calcHeight(this._convertToToolbarOptions(options));
        }
        return 0;
    }
    update(masterFilterValues) {
        if (this._visible) {
            let options = DashboardTitleToolbarAdapter.getTitleOptions(this._titleViewModel, masterFilterValues, this._options.showExportDialog, this._options.showParametersDialog, this._options.allowExport);
            this._raiseUpdated(options);
            this._captionToolbar.update(this._convertToToolbarOptions(options), this._titleViewModel.LayoutModel.Alignment === 'Center');
        }
    }
    resize() {
        if (this._visible) {
            this._captionToolbar.onResize();
        }
    }
    _convertToToolbarOptions(options) {
        return {
            staticItems: options.contentItems,
            actionItems: options.actionItems,
            stateItems: []
        };
    }
    _raiseUpdated(option) {
        this.onUpdated.fire(option);
    }
}
