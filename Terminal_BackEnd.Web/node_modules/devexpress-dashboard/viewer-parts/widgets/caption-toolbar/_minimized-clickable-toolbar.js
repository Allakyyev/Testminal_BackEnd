/**
* DevExpress Dashboard (_minimized-clickable-toolbar.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { off, on } from 'devextreme/events';
import * as $ from 'jquery';
import { cssClasses } from './_caption-toolbar-css-classes';
import { ClickableFloatingCaptionToolbar } from './_clickable-floating-toolbar';
export class MinimizedClickableCaptionToolbar extends ClickableFloatingCaptionToolbar {
    constructor(_container, _controlContainer, _popupContainer, encodeHtml, isBottomPosition, itemHasOwnContent) {
        super(_container, _controlContainer, _popupContainer, encodeHtml, isBottomPosition, itemHasOwnContent);
    }
    showPreviewFloatingPanel() {
        if (this._getVisibleItems().length > 0) {
            this._previewFloatingPanel.show();
            this._toolbar.repaint();
            this._disableShield();
            ClickableFloatingCaptionToolbar.activateToolbar(this);
        }
    }
    hideFloatingPanel() {
        super.hideFloatingPanel();
        this._previewFloatingPanel.hide();
        this._toolbar.repaint();
        this._enableShield();
    }
    dispose() {
        this._previewFloatingPanel && this._previewFloatingPanel.dispose();
        off(this._previewToolbarDiv, 'click.preview');
        super.dispose();
    }
    _createInstance() {
        return new MinimizedClickableCaptionToolbar(undefined, undefined, undefined, this.encodeHtml, this._isBottomPosition, this._itemHasOwnContent);
    }
    _appendToContainer(toolbarDiv) {
        this._previewToolbarDiv = document.createElement('div');
        this._previewToolbarDiv.classList.add(cssClasses.toolbarPreview);
        let previewFloatingPanelDiv = document.createElement('div');
        $.fn.constructor(this._container).prepend(previewFloatingPanelDiv);
        this._previewFloatingPanel = this._createFloatingPanel(this._previewToolbarDiv, previewFloatingPanelDiv, true);
        this._previewToolbarDiv.appendChild($.fn.constructor('<svg><use xlink:href="#' + cssClasses.ellipsisIcon + '" /></svg>').get(0));
        on(this._previewToolbarDiv, 'click.preview', () => this.showFloatingPanel());
        return super._appendToContainer(toolbarDiv);
    }
    _subscribeOnShieldEvents() {
        on(this._shieldDiv, 'click.shield', () => this.showPreviewFloatingPanel());
    }
}
