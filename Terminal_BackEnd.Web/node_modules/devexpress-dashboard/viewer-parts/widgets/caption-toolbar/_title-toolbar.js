/**
* DevExpress Dashboard (_title-toolbar.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { arrangeTitleToolbarItems } from './_caption-toolbar-arranger';
import { DashboardCaptionToolbarBase } from './_caption-toolbar-base';
import { cssClasses } from './_caption-toolbar-css-classes';
export class DashboardTitleToolbar extends DashboardCaptionToolbarBase {
    constructor(_container, _controlContainer, _popupContainer, encodeHtml, allowHideEmptyToolbar = false, _optionalClass) {
        super(_container, _controlContainer, _popupContainer, encodeHtml);
        this.allowHideEmptyToolbar = allowHideEmptyToolbar;
        this._optionalClass = _optionalClass;
        this._showStaticItemsOnCenter = false;
        this._className = this._optionalClass ? [this._optionalClass, cssClasses.title].join(' ') : cssClasses.title;
    }
    get _staticItemsClass() {
        return this._showStaticItemsOnCenter ? cssClasses.toolbarCenter : cssClasses.toolbarBefore;
    }
    calcHeight(options) {
        if (this._visible(options)) {
            return super.calcHeight(options);
        }
        else {
            return 0;
        }
    }
    update(options, showStaticItemsOnCenter) {
        this._showStaticItemsOnCenter = showStaticItemsOnCenter || false;
        let heightChanded = false;
        if (this._visible(options)) {
            heightChanded = super.update(options);
        }
        else if (this._initialized) {
            this.dispose();
            heightChanded = true;
        }
        return heightChanded;
    }
    _getVisibleItems() {
        return arrangeTitleToolbarItems(this._options, this._showStaticItemsOnCenter);
    }
    _createInstance() {
        return new DashboardTitleToolbar(undefined, undefined, undefined, this.encodeHtml, this.allowHideEmptyToolbar, this._optionalClass);
    }
    _visible(options) {
        return !this.allowHideEmptyToolbar || options.actionItems.length > 0 || options.navigationItems.length > 0 || options.stateItems.length > 0 || options.staticItems.length > 0;
    }
}
