/**
* DevExpress Dashboard (_popup-menu-creator.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import dxList from 'devextreme/ui/list';
import dxPopover from 'devextreme/ui/popover';
import 'devextreme/ui/tile_view';
import dxTileView from 'devextreme/ui/tile_view';
import { createSvgIconElement } from '../../../data/_utils';
import { cssClasses } from './_caption-toolbar-css-classes';
export class PopupMenuCreator {
    static toggleMenu(element, menu, container, controlContainer, onMenuItemClick) {
        let popoverOptions = this._createPopoverOptions(element, menu, container, controlContainer);
        let onItemClick = (data) => {
            popover.hide();
            if (onMenuItemClick) {
                onMenuItemClick();
            }
            if (menu.itemClick)
                menu.itemClick(data.itemData, data.itemElement, data.itemIndex);
        };
        if (menu.type === 'icons') {
            popoverOptions.contentTemplate = (contentElement) => {
                let div = document.createElement('div');
                new dxTileView(div, this._createTileViewOptions(menu, onItemClick));
                return div;
            };
        }
        else {
            popoverOptions.contentTemplate = (contentElement) => {
                return new dxList(document.createElement('div'), this._createListOptions(menu, onItemClick)).element();
            };
        }
        let popoverClass = menu.type === 'icons' ? cssClasses.popoverIconMenuWrapper : cssClasses.popoverListWrapper;
        popoverOptions.wrapperAttr = { class: popoverClass };
        let popoverContainer = this._getPopupContainer(element, 'dx-dashboard-popover-marker');
        var popover = dxPopover.getInstance(popoverContainer);
        if (popover) {
            popover.option(popoverOptions);
        }
        else {
            popover = new dxPopover(popoverContainer, popoverOptions);
        }
        popover.toggle(!popover.option('visible'));
    }
    static _createPopoverOptions(element, menu, container, controlContainer) {
        return {
            width: 'auto',
            height: 'auto',
            target: element,
            toolbarItems: menu.type === 'icons' && menu.title ? [{ location: 'center', text: menu.title }] : [],
            animation: {
                show: { type: 'pop', from: { opacity: 1, scale: 0 }, to: { scale: 1 } },
                hide: { type: 'pop', from: { scale: 1 }, to: { scale: 0 } }
            },
            position: {
                my: 'top',
                at: 'bottom',
                collision: 'fit flip',
                boundary: controlContainer
            },
            container: container
        };
    }
    static _createTileViewOptions(menu, onItemClick) {
        let itemsCount = menu.items.length;
        let columnCount = menu.columnCount ? Math.min(menu.columnCount, itemsCount) : itemsCount;
        return {
            direction: 'horizontal',
            dataSource: menu.items,
            height: this._icon_menu_element_size * Math.ceil(itemsCount / columnCount),
            itemMargin: 0,
            baseItemHeight: this._icon_menu_element_size,
            baseItemWidth: this._icon_menu_element_size,
            itemTemplate: menu.itemTemplate ? menu.itemTemplate : (itemData, itemIndex, itemElement) => {
                return createSvgIconElement(menu.items[itemIndex]);
            },
            onItemClick: onItemClick
        };
    }
    static _createListOptions(menu, onItemClick) {
        let listOptions = {
            selectionMode: menu.selectionMode || 'none',
            selectedItems: menu.selectedItems || [],
            dataSource: menu.items,
            onItemClick: onItemClick
        };
        if (menu.itemTemplate) {
            listOptions.itemTemplate = menu.itemTemplate;
        }
        return listOptions;
    }
    static _getPopupContainer(element, markerClassName) {
        let popupContainer = element.querySelectorAll('.' + markerClassName);
        if (popupContainer.length > 1) {
            console.log('Multiple popovers');
        }
        else if (popupContainer.length === 0) {
            let div = document.createElement('div');
            div.classList.add(markerClassName);
            element.appendChild(div);
            return div;
        }
        else {
            return popupContainer[0];
        }
    }
}
PopupMenuCreator._icon_menu_element_size = 65;
