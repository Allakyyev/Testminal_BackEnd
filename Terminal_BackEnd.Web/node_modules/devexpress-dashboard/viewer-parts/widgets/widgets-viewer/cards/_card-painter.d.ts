/**
* DevExpress Dashboard (_card-painter.d.ts)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
/// <reference types="jquery" />
/// <reference types="jquery" />
import { IDisposable } from '@devexpress/analytics-core/analytics-utils';
import { cardItemStyleSettingsProvider } from '../../../conditional-formatting/_style-settings-provider';
import { IWidgetItemDataAccessor } from '../../../viewer-items/_widget-viewer-item-core';
import { cardArrangementInfo } from './_card-arrangement-info';
import { cardIndicatorElement, cardLayout, cardRow, cardRowElement, cardRowElementBase, cardSparklineElement } from './_card-layout';
export declare class cardPainter {
    private data;
    private controlContainer;
    _styleSettingsProvider: cardItemStyleSettingsProvider;
    _cardStyle: any;
    layout: cardLayout;
    constructor(data: IWidgetItemDataAccessor, controlContainer: HTMLElement);
    draw(cardArrangements: cardArrangementInfo, layout: cardLayout, _styleSettingsProvider: cardItemStyleSettingsProvider): {
        element: JQuery;
        disposables: IDisposable[];
    };
    appendCardContent(cardArrangements: cardArrangementInfo, layout: cardLayout, parent: JQuery): IDisposable[];
    appendRows(rowModels: cardRow[], contentWidth: number, parent: JQuery): IDisposable[];
    createRow(elementModels: cardRowElementBase[], rowDiv: JQuery, contentWidth: number): IDisposable[];
    appendElements(elements: cardRowElementBase[], contentWidth: number, parent: JQuery<HTMLElement>): IDisposable[];
    appendIndicatorElement(indicatorElement: cardIndicatorElement, parent: JQuery<HTMLElement>): any;
    appendSparklineElement(sparklineElement: cardSparklineElement, contentWidth: number, parent: JQuery<HTMLElement>): IDisposable;
    appendDataElement(textElement: cardRowElement, parent: JQuery<HTMLElement>): IDisposable;
    setElementColor(element: cardRowElement, elementDiv: JQuery, elementProperties: Array<{
        propertyName: string;
        propertyValue: any;
    }>): void;
}
