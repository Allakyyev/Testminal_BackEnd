/**
* DevExpress Dashboard (_color-scheme-entry.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { Color } from '../../color';
import { calculation, expression, measureFilterString, windowDefinition } from '../../data-item/metadata/_measure';
import { itemType } from '../../metadata/_base-metadata';
export let colorSchemeDataSource = { propertyName: 'dataSource', modelName: '@DataSource', displayName: 'DevExpress.DashboardCommon.DynamicListLookUpSettings.DataSource', defaultVal: '', simpleFormAdapterItem: 'textBoxEditor' };
export let colorSchemeDataMember = { propertyName: 'dataMember', modelName: '@DataMember', displayName: 'DashboardStringId.DataSourceDataMember', defaultVal: '', simpleFormAdapterItem: 'textBoxEditor' };
export let colorSchemeColor = { propertyName: 'color', modelName: '@Color', displayName: 'DashboardStringId.DescriptionItemColor', defaultVal: null, simpleFormAdapterItem: 'textBoxEditor', from: Color._colorFromModel, toJsonObject: Color._colorToModel };
export let paletteIndex = { propertyName: 'paletteIndex', modelName: '@PaletteIndex', displayName: 'DashboardStringId.ColorPaletteIndex', defaultVal: null, simpleFormAdapterItem: 'numberBoxEditor' };
export let colorSchemeSummaryType = { propertyName: 'summaryType', modelName: '@SummaryType', displayName: 'DashboardWebStringId.SummaryType', defaultVal: 'Sum', simpleFormAdapterItem: 'textBoxEditor' };
export let dimensionInfoDateTimeGroupInterval = { propertyName: 'dateTimeGroupInterval', modelName: '@DateTimeGroupInterval', displayName: 'DashboardWebStringId.Colorization.GroupInterval', defaultVal: 'Year', simpleFormAdapterItem: 'textBoxEditor' };
export let definitionInfo = [colorSchemeDataMember, dimensionInfoDateTimeGroupInterval];
export let definitionsInMeasureDefinition = { propertyName: 'definitions', modelName: 'Definitions', array: true };
export let measureKeySerializationInfo = [colorSchemeDataMember, colorSchemeSummaryType, calculation, windowDefinition, expression, measureFilterString, definitionsInMeasureDefinition];
export let dimensionKeys = { propertyName: 'dimensionKeys', modelName: 'DimensionKeys', displayName: 'DashboardStringId.DescriptionDimensions', array: true };
export let measureKey = { propertyName: 'measureKeys', modelName: 'MeasureKey', displayName: 'DashboardStringId.DescriptionMeasures', array: true, info: measureKeySerializationInfo };
export let colorSchemeEntrySerializationInfo = [itemType, colorSchemeDataSource, colorSchemeDataMember, colorSchemeColor, paletteIndex, dimensionKeys, measureKey];
export let colorShemetype = { propertyName: 'type', modelName: '@Type', displayName: 'DashboardWebStringId.Type', simpleFormAdapterItem: 'textBoxEditor' };
export let dimensionValue = { propertyName: 'value', modelName: '@Value', displayName: 'DashboardStringId.ValueCaption', simpleFormAdapterItem: 'textBoxEditor' };
export let valueInfo = [colorShemetype, dimensionValue];
export let definition = { propertyName: 'definition', modelName: 'Definition', info: definitionInfo, defaultVal: '' };
export let colorShemeValue = { propertyName: 'value', modelName: 'Value', displayName: 'DashboardStringId.ValueCaption', info: valueInfo };
export let dimensionKeySerializationInfo = [definition, colorShemeValue];
