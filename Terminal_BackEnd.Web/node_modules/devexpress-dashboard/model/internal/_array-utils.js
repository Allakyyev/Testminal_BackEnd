/**
* DevExpress Dashboard (_array-utils.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { arrayEquals as arrayEqualsBase } from '../../data/_utils';
export function arrayEquals(array1, array2) {
    return arrayEqualsBase(array1, array2);
}
export function arrayInsert(a, insertion, position) {
    return a.slice(0, position).concat(insertion, a.slice(position, a.length));
}
export function areArraysEqual(arr1 = [], arr2 = []) {
    return arr1.length === arr2.length && arr1.every((val, index) => val === arr2[index]);
}
export function compareArrays(array1, array2, predicate = (a, b) => a === b) {
    if (array1.length !== array2.length)
        return false;
    for (var i = 0; i < array1.length; i++) {
        if (!predicate(array1[i], array2[i]))
            return false;
    }
    return true;
}
export function compareNotOrderedArrays(array1, array2, predicate = (a, b) => a === b) {
    if (array1.length !== array2.length)
        return false;
    for (var i = 0; i < array1.length; i++) {
        if (!array2.some(array => predicate(array1[i], array)))
            return false;
    }
    return true;
}
export function findClosestItemIndex(array, predicate) {
    var resultIndex = array.length;
    array.some((element, index) => {
        if (predicate(element)) {
            resultIndex = index;
            return true;
        }
        return false;
    });
    return resultIndex;
}
