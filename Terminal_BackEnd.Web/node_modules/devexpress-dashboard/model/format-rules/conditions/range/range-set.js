/**
* DevExpress Dashboard (range-set.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { ModelSerializer, deserializeArray } from '@devexpress/analytics-core/analytics-utils';
import { collectionItemType } from '../../../internal/_utils';
import { SerializableModel } from '../../../serializable-model';
import { rangeSetSerializationsInfo } from './metadata/_range-set';
import { RangeInfo } from './range-info';
export class RangeSet extends SerializableModel {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
        this.ranges = deserializeArray(modelJson.Ranges, (range) => new RangeInfo(range, serializer));
    }
    dispose() {
        super.dispose();
        this.disposeObservableArray(this.ranges);
    }
    getInfo() {
        return rangeSetSerializationsInfo;
    }
}
__decorate([
    collectionItemType('RangeInfo')
], RangeSet.prototype, "ranges", void 0);
