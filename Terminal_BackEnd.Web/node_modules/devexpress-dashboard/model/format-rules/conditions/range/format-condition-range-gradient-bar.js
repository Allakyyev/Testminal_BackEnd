/**
* DevExpress Dashboard (format-condition-range-gradient-bar.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ModelSerializer } from '@devexpress/analytics-core/analytics-utils';
import { BarStyleSettings } from '../../style-settings/bar-style-settings';
import { FormatConditionRangeGradient } from './format-condition-range-gradient';
import { formatConditionGradientRangeBarSerializationsInfo } from './metadata/_format-condition-range-gradient-bar';
import { FormatConditionRangeGenerator } from './range-generator';
export class FormatConditionGradientRangeBar extends FormatConditionRangeGradient {
    constructor(modelJson, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
    }
    get _isApplyToRowColumnRestricted() { return true; }
    getInfo() {
        return formatConditionGradientRangeBarSerializationsInfo;
    }
    getActualPredefinedType() {
        return FormatConditionRangeGenerator.getGradientPredefinedType(this.actualStyles, (type) => {
            var c = new FormatConditionGradientRangeBar();
            FormatConditionRangeGenerator.generateGradientByType(c, type, 5, true);
            return c;
        });
    }
    setActualPredefinedType(type) {
        FormatConditionRangeGenerator.generateGradientByType(this, type, 5, true);
    }
    _isGradientStop(style) {
        if (style instanceof BarStyleSettings) {
            return FormatConditionRangeGradient.isGradientStop(style.predefinedColor(), style.color());
        }
        else {
            return false;
        }
    }
    _generateByDefault(segmentNumber) {
        FormatConditionRangeGenerator.generateGradientByStyles(this, this.stopStyles, segmentNumber);
    }
}
