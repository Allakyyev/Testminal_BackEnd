/**
* DevExpress Dashboard (_format-condition-min-max-base.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { floatFromModel } from '../../../metadata/_base-metadata';
import { formatConditionStyleBaseSerializationsInfo } from './_format-condition-style-base';
export let minimumType = {
    propertyName: 'minimumType', modelName: '@MinimumType', displayName: 'DashboardWebStringId.ConditionalFormatting.MinimumType', defaultVal: 'Automatic', simpleFormAdapterItem: 'buttonGroupEditor', values: {
        'Automatic': 'DashboardStringId.FormatConditionAutomaticValueType',
        'Number': 'DashboardStringId.FormatConditionNumberValueType',
        'Percent': 'DashboardStringId.FormatConditionPercentValueType'
    }
};
export let maximumType = {
    propertyName: 'maximumType', modelName: '@MaximumType', displayName: 'DashboardWebStringId.ConditionalFormatting.MaximumType', defaultVal: 'Automatic', simpleFormAdapterItem: 'buttonGroupEditor', values: {
        'Automatic': 'DashboardStringId.FormatConditionAutomaticValueType',
        'Number': 'DashboardStringId.FormatConditionNumberValueType',
        'Percent': 'DashboardStringId.FormatConditionPercentValueType'
    }
};
export let formatConditionMinimum = { propertyName: 'minimum', modelName: '@Minimum', displayName: 'DashboardWebStringId.ConditionalFormatting.ConditionMinimum', defaultVal: 0, simpleFormAdapterItem: 'numberBoxEditor', from: floatFromModel };
export let formatConditionMaximum = { propertyName: 'maximum', modelName: '@Maximum', displayName: 'DashboardWebStringId.ConditionalFormatting.ConditionMaximum', defaultVal: 0, simpleFormAdapterItem: 'numberBoxEditor', from: floatFromModel };
export let formatConditionMinMaxBaseSerializationsInfo = formatConditionStyleBaseSerializationsInfo.concat([minimumType, maximumType, formatConditionMinimum, formatConditionMaximum]);
