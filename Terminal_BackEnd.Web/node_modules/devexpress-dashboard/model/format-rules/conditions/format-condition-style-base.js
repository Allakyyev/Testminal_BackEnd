/**
* DevExpress Dashboard (format-condition-style-base.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ModelSerializer } from '@devexpress/analytics-core/analytics-utils';
import * as ko from 'knockout';
import { styleSettings } from '../metadata/_format-rules-common';
import { styleSettingsTypes, styleSettingsTypesMap } from '../style-settings/_style-settings-utils';
import { FormatConditionBase } from './format-condition-base';
export let currentStyleSettingsInfo = (styleSettingsType) => {
    return !styleSettingsType ? undefined : Object.assign(Object.assign({}, styleSettings), { modelName: styleSettingsType(), type: styleSettingsTypesMap[styleSettingsType()] });
};
export class FormatConditionStyleBase extends FormatConditionBase {
    constructor(modelJson, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
        this.styleSettings = ko.observable();
        this._styleSettingsType = ko.observable();
        this._styleSettingsType(styleSettingsTypes.filter(mapItem => !!modelJson && modelJson[mapItem])[0] || this._getDefaultStyleSettingsType());
        let styleSettingsModelName = this._getStyleSettingsInfo().modelName;
        let styleSettingsJson = (modelJson || {})[styleSettingsModelName];
        this.styleSettings(new styleSettingsTypesMap[this._styleSettingsType()](styleSettingsJson));
        delete this['_model'][styleSettingsModelName];
        this.addDisposable(this.styleSettings.subscribe(styleSettings => {
            this._styleSettingsType(styleSettingsTypes.filter(mapItem => styleSettings instanceof styleSettingsTypesMap[mapItem])[0]);
        }));
    }
    getInfo() {
        let styleSettingsInfo = this._getStyleSettingsInfo();
        return this._getInfoButStyleSettings().concat(!styleSettingsInfo ? [] : [styleSettingsInfo]);
    }
    _getStyleSettingsInfo() {
        return currentStyleSettingsInfo(this._styleSettingsType);
    }
    _getDefaultStyleSettingsType() {
        return 'AppearanceSettings';
    }
    getDefaultStyleSettingsType() {
        return this._getDefaultStyleSettingsType();
    }
    isValid() {
        return super.isValid();
    }
    init() {
        if (this.styleSettings()) {
            this.styleSettings().init();
        }
        this.isEmpty(false);
    }
}
