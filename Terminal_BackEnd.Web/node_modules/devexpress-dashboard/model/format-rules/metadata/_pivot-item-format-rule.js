/**
* DevExpress Dashboard (_pivot-item-format-rule.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { parseBool } from '../../metadata/_base-metadata';
import { PivotItemFormatRuleLevel } from '../pivot-item-format-rule-level';
import { cellsItemFormatRuleSerializationsInfo } from './_cells-item-format-rule';
export let applyToColumn = { propertyName: 'applyToColumn', modelName: '@ApplyToColumn', displayName: 'DashboardStringId.FormatRuleApplyToColumn', defaultVal: false, simpleFormAdapterItem: 'onOffButtonGroupEditor', from: parseBool };
export let intersectionLevelModeValues = {
    'Auto': 'DashboardStringId.IntersectionLevelModeAuto',
    'FirstLevel': 'DashboardStringId.IntersectionLevelModeFirst',
    'LastLevel': 'DashboardStringId.IntersectionLevelModeLast',
    'AllLevels': 'DashboardStringId.IntersectionLevelModeAll',
    'SpecificLevel': 'DashboardStringId.IntersectionLevelModeSpecific'
};
export let restrictedIntersectionLevelModeValues = Object.assign({}, intersectionLevelModeValues);
delete restrictedIntersectionLevelModeValues['AllLevels'];
export let intersectionLevelMode = {
    propertyName: 'intersectionLevelMode', modelName: '@IntersectionLevelMode', displayName: 'DashboardWebStringId.ConditionalFormatting.IntersectionLevelMode', defaultVal: 'Auto'
};
export let pivotLevel = { propertyName: 'level', modelName: 'PivotItemFormatRuleLevel', type: PivotItemFormatRuleLevel };
export let pivotItemFormatRuleSerializationsInfo = cellsItemFormatRuleSerializationsInfo.concat([applyToColumn, intersectionLevelMode, pivotLevel]);
