/**
* DevExpress Dashboard (dashboard-item-format-rule.d.ts)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ISerializationInfoArray, ModelSerializer } from '@devexpress/analytics-core/analytics-utils';
import * as ko from 'knockout';
import { TypedSerializableModel } from '../serializable-model';
import { FormatConditionAverage } from './conditions/format-condition-average';
import { FormatConditionBar } from './conditions/format-condition-bar';
import { FormatConditionBase } from './conditions/format-condition-base';
import { FormatConditionDateOccurring } from './conditions/format-condition-date-occuring';
import { FormatConditionExpression } from './conditions/format-condition-expression';
import { FormatConditionTopBottom } from './conditions/format-condition-top-bottom';
import { FormatConditionValue } from './conditions/format-condition-value';
import { FormatConditionRangeGradient } from './conditions/range/format-condition-range-gradient';
import { FormatConditionGradientRangeBar } from './conditions/range/format-condition-range-gradient-bar';
export declare abstract class DashboardItemFormatRule extends TypedSerializableModel {
    name: ko.Observable<string>;
    enabled: ko.Observable<boolean>;
    conditionBar: FormatConditionBar;
    conditionValue: FormatConditionValue;
    conditionTopBottom: FormatConditionTopBottom;
    conditionAverage: FormatConditionAverage;
    conditionDateOccuring: FormatConditionDateOccurring;
    conditionRangeGradient: FormatConditionRangeGradient;
    conditionExpression: FormatConditionExpression;
    conditionGradientRangeBar: FormatConditionGradientRangeBar;
    condition: ko.Computed<FormatConditionBase>;
    get _classCaption(): string;
    get _classId(): string;
    constructor(modelJson?: any, serializer?: ModelSerializer);
    getInfo(): ISerializationInfoArray;
    _changeConditionType(propertyName: string): void;
}
