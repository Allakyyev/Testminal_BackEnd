/**
* DevExpress Dashboard (static-list-lookup-settings.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { ModelSerializer, deserializeArray } from '@devexpress/analytics-core/analytics-utils';
import * as ko from 'knockout';
import { collectionItemType } from '../internal/_utils';
import { SerializableModel } from '../serializable-model';
import { LookUpValue } from './look-up-value';
import { staticListLookUpSettingsSerializationsInfo } from './metadata/_static-list-lookup-settings';
import { ParameterHelper } from './_parameters-helper';
export class StaticListLookUpSettings extends SerializableModel {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
        this._valueType = ko.observable();
        this.values = deserializeArray(modelJson.Values, (item) => new LookUpValue(item, serializer));
    }
    getInfo() {
        return staticListLookUpSettingsSerializationsInfo;
    }
    _updateValuesType(newType) {
        this._valueType(newType);
        if (this.values() && this.values().length > 0) {
            this.values().forEach((lookUpValue) => {
                lookUpValue.valueType(newType);
                lookUpValue.value(ParameterHelper.convertSingleValue(lookUpValue.value(), newType));
            });
        }
    }
}
StaticListLookUpSettings.modelName = 'StaticListLookUpSettings';
__decorate([
    collectionItemType('Value')
], StaticListLookUpSettings.prototype, "values", void 0);
export let _staticListLookUpSettingsSerializationInfo = { propertyName: 'staticListLookUpSettings', displayName: 'DashboardWebStringId.Parameters.StaticListLookUpSettings', type: StaticListLookUpSettings, defaultVal: null, alwaysSerialize: true };
