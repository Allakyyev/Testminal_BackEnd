/**
* DevExpress Dashboard (custom-properties.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { SerializableModel } from '../serializable-model';
import { validateCustomPropertyName, validateCustomPropertyValueType } from './_custom-property-validation';
export class CustomProperties extends SerializableModel {
    constructor(json, serializer, info) {
        super(json, serializer, info);
        info.forEach(propertyInfo => {
            this.addDisposable(this[propertyInfo.propertyName].subscribe(value => {
                propertyInfo.alwaysSerialize = value !== null && value !== undefined;
            }));
        });
        this.getInfo = () => info;
    }
    _isKnownProperty(propertyName) {
        return !!this.getInfo().filter(i => i.propertyName === propertyName)[0];
    }
    getValue(propertyName) {
        if (this._isKnownProperty(propertyName)) {
            return this[propertyName].peek();
        }
        else {
            return this._model[propertyName];
        }
    }
    setValue(propertyName, propertyValue) {
        validateCustomPropertyName(propertyName);
        validateCustomPropertyValueType(propertyName, propertyValue);
        if (this._isKnownProperty(propertyName)) {
            this[propertyName](propertyValue);
        }
        else {
            this._model[propertyName] = propertyValue;
        }
    }
}
