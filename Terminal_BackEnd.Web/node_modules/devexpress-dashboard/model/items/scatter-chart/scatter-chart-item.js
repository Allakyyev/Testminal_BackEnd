/**
* DevExpress Dashboard (scatter-chart-item.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { ModelSerializer, deserializeArray } from '@devexpress/analytics-core/analytics-utils';
import * as ko from 'knockout';
import { DataItemLink } from '../../data-item/data-item';
import { ScatterWindowDefinition } from '../../data-item/window-definition/scatter-chart-calc-window-definition';
import { collectionItemType } from '../../internal/_utils';
import { BindingSectionTitles } from '../../metadata/_base-metadata';
import { itemTypesMap } from '../../serializable-model';
import { DataDashboardItem } from '../data-dashboard-item';
import { axisXMeasure, axisYMeasure, scatterArgumentsMeta, scatterChartDashboardItemSerializationsInfo, scatterChartWeight } from './metadata/_scatter-chart-item';
export class ScatterChartItem extends DataDashboardItem {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
        this.arguments = ko.observableArray([]);
        this.__arguments = deserializeArray(modelJson.Dimensions, (item) => new DataItemLink(this, item, serializer));
        this._subscribeDataItemLinkArrays(scatterArgumentsMeta);
        this.addDisposable(this.__arguments.subscribe((newValue) => {
            DataDashboardItem._addColoringMeta(newValue);
        }));
        DataDashboardItem._addColoringMeta(this.__arguments());
        this._attachDataItem(this, scatterChartWeight.propertyName);
        this._attachDataItem(this, axisXMeasure.propertyName);
        this._attachDataItem(this, axisYMeasure.propertyName);
    }
    _clearBindings() {
        super._clearBindings();
        this.disposeObservableArray(this.__arguments);
        this.__arguments.removeAll();
    }
    _getInfoCore() {
        return scatterChartDashboardItemSerializationsInfo;
    }
    _isCalculationSupported() {
        return true;
    }
    _getDefaultItemType() {
        return 'ScatterChart';
    }
    _getMasterFilterMode() { return this.interactivityOptions.masterFilterMode(); }
    _getDrillDownEnabled() { return this.interactivityOptions.isDrillDownEnabled(); }
    _getIgnoreMasterFilter() { return this.interactivityOptions.ignoreMasterFilters(); }
    _getInteractivityDimensionLinks() { return this.__arguments(); }
    _getCanColorByMeasures() { return false; }
    _getCanColorByDimensions() { return true; }
    _getColorizableDataItemsInfo() {
        return [{
                items: this.__arguments(),
                prefixId: BindingSectionTitles.Arguments
            }];
    }
    _getDefaultCalculationWindowDefinition() {
        return new ScatterWindowDefinition();
    }
    _isSortingEnabled() {
        return false;
    }
}
__decorate([
    collectionItemType('Dimension')
], ScatterChartItem.prototype, "__arguments", void 0);
itemTypesMap['ScatterChart'] = { type: ScatterChartItem, groupName: 'common', title: 'DashboardStringId.DefaultNameScatterChartItem', index: 50 };
