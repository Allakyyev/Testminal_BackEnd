/**
* DevExpress Dashboard (slice-table.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { ModelSerializer, deserializeArray } from '@devexpress/analytics-core/analytics-utils';
import { DataItemLink } from '../../data-item/data-item';
import { collectionItemType } from '../../internal/_utils';
import { SerializableModel } from '../../serializable-model';
import { sliceTableSerializationsInfo } from './metadata/_slice-table';
export class SliceTable extends SerializableModel {
    constructor(_dataItemProvider, modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
        this._dataItemProvider = _dataItemProvider;
        this.dimensions = deserializeArray(modelJson.Dimensions, (item) => new DataItemLink(_dataItemProvider, item, serializer));
        this.measures = deserializeArray(modelJson.Measures, (item) => new DataItemLink(_dataItemProvider, item, serializer));
    }
    getInfo() {
        return sliceTableSerializationsInfo;
    }
    push(bindings, dataItemType) {
        var targetArray = dataItemType === 'Dimension' ? this.dimensions : this.measures;
        targetArray.push.apply(targetArray, bindings.map(link => DataItemLink.create(this._dataItemProvider, link)));
    }
}
__decorate([
    collectionItemType('Dimension')
], SliceTable.prototype, "dimensions", void 0);
__decorate([
    collectionItemType('Measure')
], SliceTable.prototype, "measures", void 0);
