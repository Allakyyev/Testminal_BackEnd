/**
* DevExpress Dashboard (_delta-options.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { floatFromModel } from '../../../metadata/_base-metadata';
export let deltaValueTypeMap = {
    'ActualValue': 'DashboardStringId.DeltaValueTypeActualValueCaption',
    'AbsoluteVariation': 'DashboardStringId.DeltaValueTypeAbsoluteVariationCaption',
    'PercentVariation': 'DashboardStringId.DeltaValueTypePercentVariationCaption',
    'PercentOfTarget': 'DashboardStringId.DeltaValueTypePercentOfTargetCaption',
    'TargetValue': 'DashboardStringId.DeltaValueTypeTargetValueCaption'
};
export let valueType = {
    propertyName: 'valueType', modelName: '@ValueType', displayName: 'DashboardWebStringId.Delta.ValueType', defaultVal: 'AbsoluteVariation', simpleFormAdapterItem: 'listEditor', values: deltaValueTypeMap
};
export let resultIndicationMode = {
    propertyName: 'resultIndicationMode', modelName: '@ResultIndicationMode', displayName: 'DashboardWebStringId.Delta.ResultIndication', defaultVal: 'GreaterIsGood', simpleFormAdapterItem: 'listEditor', values: {
        'GreaterIsGood': 'DashboardStringId.DeltaIndicationModeGreaterIsGoodCaption',
        'LessIsGood': 'DashboardStringId.DeltaIndicationModeLessIsGoodCaption',
        'WarningIfGreater': 'DashboardStringId.DeltaIndicationModeWarningIfGreaterCaption',
        'WarningIfLess': 'DashboardStringId.DeltaIndicationModeWarningIfLessCaption',
        'NoIndication': 'DashboardStringId.DeltaIndicationModeNoIndicationCaption'
    }
};
export let resultIndicationThresholdType = {
    propertyName: 'resultIndicationThresholdType', modelName: '@ResultIndicationThresholdType', displayName: 'DashboardWebStringId.Delta.ThresholdType', defaultVal: 'Percent', simpleFormAdapterItem: 'buttonGroupEditor', values: {
        'Absolute': 'DashboardStringId.DeltaThresholdTypeAbsolute',
        'Percent': 'DashboardStringId.DeltaThresholdTypePercent'
    }
};
export let resultIndicationThreshold = { propertyName: 'resultIndicationThreshold', modelName: '@ResultIndicationThreshold', displayName: 'DashboardWebStringId.Delta.ThresholdValue', defaultVal: 0, simpleFormAdapterItem: 'numberBoxEditor', from: floatFromModel };
export let cardDeltaOptionsSerializationsInfo = [resultIndicationMode, resultIndicationThresholdType, resultIndicationThreshold];
export let deltaOptionsSerializationsInfo = [valueType].concat(cardDeltaOptionsSerializationsInfo);
