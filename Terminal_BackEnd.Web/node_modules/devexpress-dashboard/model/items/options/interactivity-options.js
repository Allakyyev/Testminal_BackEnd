/**
* DevExpress Dashboard (interactivity-options.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ModelSerializer } from '@devexpress/analytics-core/analytics-utils';
import { SerializableModel } from '../../serializable-model';
import { getInteractivityOptionsPropertyInfo, ignoreMasterFiltersDefaultFalse, ignoreMasterFiltersDefaultTrue, isDrillDownEnabled, isMasterFilterDefaultFalse, isMasterFilterDefaultTrue, masterFilterMode, targetDimensions } from './metadata/_interactivity-options';
export class FilterableDashboardItemInteractivityOptions extends SerializableModel {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
    }
    getInfo() {
        return [ignoreMasterFiltersDefaultTrue];
    }
}
export class DashboardItemGroupInteractivityOptions extends FilterableDashboardItemInteractivityOptions {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
    }
    getInfo() {
        return super.getInfo().concat(isMasterFilterDefaultFalse);
    }
}
export class DashboardItemBaseInteractivityOptions extends SerializableModel {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
    }
    getInfo() {
        return [ignoreMasterFiltersDefaultFalse];
    }
}
export class DashboardTabItemInteractivityOptions extends DashboardItemBaseInteractivityOptions {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
    }
    getInfo() {
        return super.getInfo().concat([isMasterFilterDefaultTrue, ignoreMasterFiltersDefaultFalse]);
    }
}
export class DashboardItemMasterFilterInteractivityOptions extends DashboardItemBaseInteractivityOptions {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
    }
    getInfo() {
        return super.getInfo().concat([masterFilterMode]);
    }
}
export class DashboardItemDrillDownInteractivityOptions extends DashboardItemBaseInteractivityOptions {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
    }
    getInfo() {
        return super.getInfo().concat([isDrillDownEnabled]);
    }
}
export class DashboardItemInteractivityOptions extends DashboardItemMasterFilterInteractivityOptions {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
    }
    getInfo() {
        return super.getInfo().concat([isDrillDownEnabled]);
    }
}
export class ChartInteractivityOptions extends DashboardItemInteractivityOptions {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
    }
    getInfo() {
        return super.getInfo().concat(targetDimensions);
    }
}
export let _filterItemInteractivityOptionsMeta = getInteractivityOptionsPropertyInfo(FilterableDashboardItemInteractivityOptions);
export let _groupItemInteractivityOptionsMeta = getInteractivityOptionsPropertyInfo(DashboardItemGroupInteractivityOptions);
export let _tabItemInteractivityOptions = getInteractivityOptionsPropertyInfo(DashboardTabItemInteractivityOptions);
export let _baseInteractivityOptionsMeta = getInteractivityOptionsPropertyInfo(DashboardItemBaseInteractivityOptions);
export let _dashboardItemInteractivityOptionsMeta = getInteractivityOptionsPropertyInfo(DashboardItemInteractivityOptions);
export let _masterFilterInteractivityOptionsMeta = getInteractivityOptionsPropertyInfo(DashboardItemMasterFilterInteractivityOptions);
export let _drillDownInteractivityOptionsMeta = getInteractivityOptionsPropertyInfo(DashboardItemDrillDownInteractivityOptions);
export let _chartItemInteractivityOptionsMeta = getInteractivityOptionsPropertyInfo(ChartInteractivityOptions);
