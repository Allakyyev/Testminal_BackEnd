/**
* DevExpress Dashboard (image-item.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ModelSerializer } from '@devexpress/analytics-core/analytics-utils';
import * as ko from 'knockout';
import { itemTypesMap } from '../serializable-model';
import { DashboardItem } from './dashboard-item';
import { imageDashboardItemSerializationsInfo } from './metadata/_image-item';
export class ImageItem extends DashboardItem {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
        this.imageType = ko.observable('linked');
        if (this.image64()) {
            this.imageType('embedded');
        }
        else {
            this.imageType('linked');
        }
        this.addDisposable(this.imageType.subscribe(imageType => {
            switch (imageType) {
                case 'embedded':
                    this.urlPath(null);
                    break;
                default:
                    this.image64(null);
                    break;
            }
        }));
    }
    _getInfoCore() {
        return imageDashboardItemSerializationsInfo;
    }
    _getDefaultItemType() {
        return 'Image';
    }
    _updateContentViewModel(content) {
        super._updateContentViewModel(content);
        content.ViewModel.SizeMode = this.sizeMode();
        content.ViewModel.HorizontalAlignment = this.horizontalAlignment();
        content.ViewModel.VerticalAlignment = this.verticalAlignment();
    }
}
itemTypesMap['Image'] = { type: ImageItem, groupName: 'common', title: 'DashboardStringId.DefaultNameImageItem', index: 90 };
