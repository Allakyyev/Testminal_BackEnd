/**
* DevExpress Dashboard (_date-time-period.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ModelSerializer } from '@devexpress/analytics-core/analytics-utils';
import { itemType, name } from '../../../metadata/_base-metadata';
import { LimitContainer } from '../limit-container';
function limitContainerFromJson(json, serializer = new ModelSerializer()) {
    return new LimitContainer(json, serializer);
}
function limitContainerToJson(limitContainer, serializer = new ModelSerializer()) {
    var limitContainerJson = serializer.serialize(limitContainer);
    if (!limitContainer.fixed.isEmpty() && !limitContainerJson.hasOwnProperty('FixedDateTimePeriodLimit')) {
        limitContainerJson.FixedDateTimePeriodLimit = null;
    }
    if (!limitContainer.flow.isEmpty() && !limitContainerJson.hasOwnProperty('FlowDateTimePeriodLimit')) {
        limitContainerJson.FlowDateTimePeriodLimit = null;
    }
    return limitContainerJson;
}
export let startLimit = { propertyName: 'start', modelName: 'StartLimit', type: LimitContainer, from: limitContainerFromJson, toJsonObject: limitContainerToJson };
export let endLimit = { propertyName: 'end', modelName: 'EndLimit', type: LimitContainer, from: limitContainerFromJson, toJsonObject: limitContainerToJson };
export let dateTimePeriodSerializationsInfo = [itemType, name, startLimit, endLimit];
export let mode = {
    propertyName: 'mode', defaultVal: 'None', simpleFormAdapterItem: 'buttonGroupEditor', values: {
        'None': 'DashboardWebStringId.RangeFilter.None',
        'Fixed': 'DashboardWebStringId.RangeFilter.Fixed',
        'Flow': 'DashboardWebStringId.RangeFilter.Flow'
    }
};
