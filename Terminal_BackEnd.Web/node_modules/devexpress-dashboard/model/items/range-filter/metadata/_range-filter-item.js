/**
* DevExpress Dashboard (_range-filter-item.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { dataItemLinkSerializationsInfo } from '../../../data-item/metadata/_data-item';
import { argumentPropertyName, PropertyCategory } from '../../../metadata/_base-metadata';
import { showCaption, showCaptionDefaultFalse } from '../../metadata/_dashboard-item';
import { seriesDashboardItemSerializationsInfo } from '../../metadata/_series-item';
import { _filterItemInteractivityOptionsMeta } from '../../options/interactivity-options';
import { coloringOptions } from '../../options/metadata/_coloring-options';
export let defaultDateTimePeriodName = { propertyName: 'defaultDateTimePeriodName', displayName: 'DashboardStringId.DateTimeFormatYearFormatDefaultCaption', modelName: '@SelectedDateTimePeriodIndex', simpleFormAdapterItem: 'textBoxEditor', category: PropertyCategory.ViewModel };
export let dateTimePeriods = { propertyName: 'dateTimePeriods', modelName: 'DateTimePeriods', array: true };
export let rangeSeries = { propertyName: 'series', modelName: 'Series', displayName: 'DashboardStringId.RangeFilterCalculationAlongSeries', array: true };
export let argument = { propertyName: argumentPropertyName, modelName: 'Argument', displayName: 'DashboardStringId.DescriptionItemArgument', info: dataItemLinkSerializationsInfo };
export let rangeFilterDashboardItemSerializationsInfo = seriesDashboardItemSerializationsInfo
    .concat([rangeSeries, argument, _filterItemInteractivityOptionsMeta, coloringOptions, dateTimePeriods, defaultDateTimePeriodName])
    .map(e => e === showCaption ? showCaptionDefaultFalse : e);
