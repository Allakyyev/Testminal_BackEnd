/**
* DevExpress Dashboard (_period-limit.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { floatFromModel, fromDateToString, fromStringToDate } from '../../../metadata/_base-metadata';
export let flowIntervalOrderedValues = ['Year', 'Quarter', 'Month', 'Week', 'Day', 'Hour', 'Minute', 'Second'];
export let flowIntervalValues = {
    'Year': 'DashboardStringId.DateTimeIntervalYear',
    'Quarter': 'DashboardStringId.DateTimeIntervalQuarter',
    'Month': 'DashboardStringId.DateTimeIntervalMonth',
    'Week': 'DashboardStringId.DateTimeIntervalWeek',
    'Day': 'DashboardStringId.DateTimeIntervalDay',
    'Hour': 'DashboardStringId.DateTimeIntervalHour',
    'Minute': 'DashboardStringId.DateTimeIntervalMinute',
    'Second': 'DashboardStringId.DateTimeIntervalSecond'
};
export function convertDateTimeGroupInterval(groupInterval) {
    var map = {
        'Year': 'Year',
        'QuarterYear': 'Quarter',
        'MonthYear': 'Month',
        'DayMonthYear': 'Day',
        'DateHour': 'Hour',
        'DateHourMinute': 'Minute',
        'DateHourMinuteSecond': 'Second',
        'None': 'Second'
    };
    var dateTimeInterval = map[groupInterval];
    if (!dateTimeInterval) {
        throw Error('Argument exception');
    }
    return dateTimeInterval;
}
export let interval = { propertyName: 'interval', modelName: '@Interval', defaultVal: 'Year' };
export let offset = { propertyName: 'offset', modelName: '@Offset', defaultVal: 0, simpleFormAdapterItem: 'numberBoxEditor', from: floatFromModel };
export let flowDateTimePeriodLimitSerializationsInfo = [interval, offset];
export let date = { propertyName: 'date', modelName: '@Date', defaultVal: fromDateToString(new Date()), from: fromStringToDate, toJsonObject: fromDateToString, simpleFormAdapterItem: 'dateBoxEditor' };
export let fixedDateTimePeriodLimitSerializationsInfo = [date];
