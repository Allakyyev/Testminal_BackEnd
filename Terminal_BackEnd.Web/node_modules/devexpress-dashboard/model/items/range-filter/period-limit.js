/**
* DevExpress Dashboard (period-limit.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ModelSerializer } from '@devexpress/analytics-core/analytics-utils';
import * as ko from 'knockout';
import { getLocalizationById } from '../../../data/localization/_default';
import { SerializableModel } from '../../serializable-model';
import { convertDateTimeGroupInterval, fixedDateTimePeriodLimitSerializationsInfo, flowDateTimePeriodLimitSerializationsInfo, flowIntervalOrderedValues, flowIntervalValues } from './metadata/_period-limit';
export class FixedDateTimePeriodLimit extends SerializableModel {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
        this.isEmpty = ko.observable(false);
    }
    getInfo() {
        return fixedDateTimePeriodLimitSerializationsInfo;
    }
    getDateTimeValue() {
        return this.date();
    }
}
export class FlowDateTimePeriodLimit extends SerializableModel {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
        this.isEmpty = ko.observable(false);
        this.argumentInterval = ko.observable('Year');
    }
    getInfo() {
        return flowDateTimePeriodLimitSerializationsInfo;
    }
    _getAvailableIntervals() {
        return flowIntervalOrderedValues
            .slice(0, flowIntervalOrderedValues.indexOf(convertDateTimeGroupInterval(this.argumentInterval())) + 1)
            .map(value => {
            return {
                value: value,
                displayValue: getLocalizationById(flowIntervalValues[value])
            };
        });
    }
}
