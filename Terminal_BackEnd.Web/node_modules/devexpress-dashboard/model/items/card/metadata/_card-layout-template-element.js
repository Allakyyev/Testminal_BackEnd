/**
* DevExpress Dashboard (_card-layout-template-element.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { floatFromModel, parseBool } from '../../../metadata/_base-metadata';
export let cardRowElementTypeValuesMapBase = {
    'Title': 'DashboardStringId.CardRowDataElementTypeTitleCaption',
    'Subtitle': 'DashboardStringId.CardRowDataElementTypeSubtitleCaption',
    'ActualValue': 'DashboardStringId.CardRowDataElementTypeActualValueCaption',
    'TargetValue': 'DashboardStringId.CardRowDataElementTypeTargetValueCaption',
    'AbsoluteVariation': 'DashboardStringId.CardRowDataElementTypeAbsoluteVariationCaption',
    'PercentVariation': 'DashboardStringId.CardRowDataElementTypePercentVariationCaption',
    'PercentOfTarget': 'DashboardStringId.CardRowDataElementTypePercentOfTargetCaption',
    'CardName': 'DashboardStringId.CardRowDataElementTypeCardNameCaption',
};
export let cardRowDataElementTypeValuesMap = Object.assign(Object.assign({}, cardRowElementTypeValuesMapBase), { 'DimensionValue': 'DashboardStringId.CardRowDataElementTypeDimensionValueCaption' });
export let cardFormatRuleLayoutElementValuesMap = Object.assign(Object.assign({ 'AllElements': 'DashboardStringId.FormatRuleApplyToAllElements' }, cardRowElementTypeValuesMapBase), { 'Indicator': 'DashboardStringId.CardRowDataElementTypeDeltaIndicatorCaption' });
export let cardRowDataElementTypeValuesMapEx = Object.assign(Object.assign({}, cardRowDataElementTypeValuesMap), { 'DeltaIndicator': 'DashboardStringId.CardRowDataElementTypeDeltaIndicatorCaption', 'Sparkline': 'DashboardStringId.CardRowDataElementTypeSparklineCaption' });
export let cardLayoutVisible = { propertyName: 'visible', modelName: '@Visible', from: parseBool };
export let dimensionIndex = { propertyName: 'dimensionIndex', modelName: '@DimensionIndex', from: floatFromModel };
export let cardLayoutValueType = { propertyName: 'valueType', modelName: '@ValueType', simpleFormAdapterItem: 'listEditor' };
export let cardLayoutTemplateElementBaseSerializationInfo = [cardLayoutVisible];
export let cardLayoutTemplateDataElementSerializationInfo = cardLayoutTemplateElementBaseSerializationInfo.concat([cardLayoutValueType, dimensionIndex]);
