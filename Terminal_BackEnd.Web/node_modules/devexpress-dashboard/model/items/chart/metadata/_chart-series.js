/**
* DevExpress Dashboard (_chart-series.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { dataItemLinkSerializationsInfo } from '../../../data-item/metadata/_data-item';
import { itemType, name, parseBool, valuePropertyName, weightPropertyName } from '../../../metadata/_base-metadata';
import { PointLabelOptions } from '../point-label-options';
export let plotOnSecondaryAxis = { propertyName: 'plotOnSecondaryAxis', modelName: '@PlotOnSecondaryAxis', displayName: 'DashboardWebStringId.Chart.PlotOnSecondaryAxis', defaultVal: false, simpleFormAdapterItem: 'onOffButtonGroupEditor', from: parseBool };
export let ignoreEmptyPoints = { propertyName: 'ignoreEmptyPoints', modelName: '@IgnoreEmptyPoints', displayName: 'DashboardWebStringId.Chart.IgnoreEmptyPoints', defaultVal: false, simpleFormAdapterItem: 'onOffButtonGroupEditor', from: parseBool };
export let showPointMarkers = { propertyName: 'showPointMarkers', modelName: '@ShowPointMarkers', displayName: 'DashboardWebStringId.Chart.ShowPointMarkers', defaultVal: false, simpleFormAdapterItem: 'onOffButtonGroupEditor', from: parseBool };
export let chartSeriesPointLabelOptions = { propertyName: 'pointLabelOptions', modelName: 'PointLabelOptions', displayName: 'DashboardWebStringId.Chart.PointLabelOptions', type: PointLabelOptions };
export let chartSeriesSerializationsInfo = [itemType, name, plotOnSecondaryAxis, ignoreEmptyPoints, showPointMarkers, chartSeriesPointLabelOptions];
export let chartSeriesType = { propertyName: 'containerType', displayName: 'DashboardWebStringId.Chart.SeriesType' };
export let simpleSeriesType = {
    propertyName: 'seriesType', modelName: '@SeriesType', defaultVal: 'Bar', values: {
        'Bar': 'DashboardStringId.SeriesTypeBar',
        'StackedBar': 'DashboardStringId.SeriesTypeStackedBar',
        'FullStackedBar': 'DashboardStringId.SeriesTypeFullStackedBar',
        'Point': 'DashboardStringId.SeriesTypePoint',
        'Line': 'DashboardStringId.SeriesTypeLine',
        'StackedLine': 'DashboardStringId.SeriesTypeStackedLine',
        'FullStackedLine': 'DashboardStringId.SeriesTypeFullStackedLine',
        'StepLine': 'DashboardStringId.SeriesTypeStepLine',
        'Spline': 'DashboardStringId.SeriesTypeSpline',
        'Area': 'DashboardStringId.SeriesTypeArea',
        'StackedArea': 'DashboardStringId.SeriesTypeStackedArea',
        'FullStackedArea': 'DashboardStringId.SeriesTypeFullStackedArea',
        'StepArea': 'DashboardStringId.SeriesTypeStepArea',
        'SplineArea': 'DashboardStringId.SeriesTypeSplineArea',
        'StackedSplineArea': 'DashboardStringId.SeriesTypeStackedSplineArea',
        'FullStackedSplineArea': 'DashboardStringId.SeriesTypeFullStackedSplineArea'
    }
};
export let rangeSeriesType = {
    propertyName: 'seriesType', modelName: '@SeriesType', defaultVal: 'SideBySideRangeBar', values: {
        'SideBySideRangeBar': 'DashboardStringId.SeriesTypeSideBySideRangeBar',
        'RangeArea': 'DashboardStringId.SeriesTypeRangeArea'
    }
};
export let openHighLowCloseSeriesType = {
    propertyName: 'seriesType', modelName: '@SeriesType', defaultVal: 'CandleStick', values: {
        'CandleStick': 'DashboardStringId.SeriesTypeCandleStick',
        'Stock': 'DashboardStringId.SeriesTypeStock'
    }
};
export let chartSeriesValue = { propertyName: valuePropertyName, modelName: 'Value', info: dataItemLinkSerializationsInfo, displayName: 'DashboardWebStringId.Chart.Value' };
export let value1 = { propertyName: '__value1', modelName: 'Value1', info: dataItemLinkSerializationsInfo, displayName: 'DashboardStringId.Value1Caption' };
export let value2 = { propertyName: '__value2', modelName: 'Value2', info: dataItemLinkSerializationsInfo, displayName: 'DashboardStringId.Value2Caption' };
export let chartSeriesWeight = { propertyName: weightPropertyName, modelName: 'Weight', info: dataItemLinkSerializationsInfo, displayName: 'DashboardStringId.WeightCaption' };
export let open = { propertyName: '__open', modelName: 'Open', info: dataItemLinkSerializationsInfo, displayName: 'DashboardStringId.OpenCaption' };
export let high = { propertyName: '__high', modelName: 'High', info: dataItemLinkSerializationsInfo, displayName: 'DashboardStringId.HighCaption' };
export let low = { propertyName: '__low', modelName: 'Low', info: dataItemLinkSerializationsInfo, displayName: 'DashboardStringId.LowCaption' };
export let close = { propertyName: '__close', modelName: 'Close', info: dataItemLinkSerializationsInfo, displayName: 'DashboardStringId.CloseCaption' };
export let simpleSeriesSerializationsInfo = chartSeriesSerializationsInfo.concat([simpleSeriesType, chartSeriesValue]);
export let rangeSeriesSerializationsInfo = chartSeriesSerializationsInfo.concat([rangeSeriesType, value1, value2]);
export let weightedSeriesSerializationsInfo = chartSeriesSerializationsInfo.concat([chartSeriesWeight, chartSeriesValue]);
export let highLowCloseSeriesSerializationsInfo = chartSeriesSerializationsInfo.concat([high, low, close]);
export let openHighLowCloseSeriesSerializationsInfo = chartSeriesSerializationsInfo.concat([openHighLowCloseSeriesType, open, high, low, close]);
