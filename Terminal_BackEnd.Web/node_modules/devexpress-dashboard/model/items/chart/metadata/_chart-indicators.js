/**
* DevExpress Dashboard (_chart-indicators.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { Color } from '../../../color';
import { floatFromModel, parseBool } from '../../../metadata/_base-metadata';
import { chartPaneName } from './_chart-pane';
export let dashStyleMap = {
    'Solid': 'DashboardWebStringId.Chart.Indicator.DashStyle.Solid',
    'Dash': 'DashboardWebStringId.Chart.Indicator.DashStyle.Dash',
    'Dot': 'DashboardWebStringId.Chart.Indicator.DashStyle.Dot',
    'DashDot': 'DashboardWebStringId.Chart.Indicator.DashStyle.DashDot',
    'DashDotDot': 'DashboardWebStringId.Chart.Indicator.DashStyle.DashDotDot'
};
export let indicatorTypeMap = {
    'RegressionLine': 'DashboardWebStringId.Chart.Indicator.Type.Regression',
    'TrendLine': 'DashboardWebStringId.Chart.Indicator.Type.Trend'
};
export let chartIndicatorColor = { propertyName: 'color', modelName: '@Color', displayName: 'DashboardWebStringId.Chart.Indicator.Color', from: Color._colorRgbaFromModel, toJsonObject: Color._colorRgbaToModel, simpleFormAdapterItem: 'colorBoxEditor' };
export let chartIndicatorDashStyle = { propertyName: 'dashStyle', modelName: '@DashStyle', displayName: 'DashboardWebStringId.Chart.Indicator.DashStyle', defaultVal: 'Solid', values: dashStyleMap, simpleFormAdapterItem: 'selectBoxEditor' };
export let chartIndicatorIgnoreEmptyArgument = { propertyName: 'ignoreEmptyArgument', modelName: '@IgnoreEmptyArgument', from: parseBool };
export let chartIndicatorType = { propertyName: 'itemType', modelName: '@ItemType', displayName: 'DashboardWebStringId.Chart.Indicator.Type', values: indicatorTypeMap, simpleFormAdapterItem: 'selectBoxEditor' };
export let chartIndicatorLegendText = { propertyName: 'legendText', modelName: '@LegendText', displayName: 'DashboardWebStringId.Chart.Indicator.LegendText', simpleFormAdapterItem: 'textBoxEditor' };
export let chartIndicatorValue = { propertyName: 'value', modelName: '@Value', displayName: 'DashboardWebStringId.Chart.Indicator.Value', simpleFormAdapterItem: 'selectBoxEditor' };
export let chartIndicatorShowInLegend = { propertyName: 'showInLegend', modelName: '@ShowInLegend', displayName: 'DashboardWebStringId.Chart.Indicator.ShowInLegend', defaultVal: false, simpleFormAdapterItem: 'yesNoButtonGroupEditor', from: parseBool };
export let chartIndicatorThickness = { propertyName: 'thickness', modelName: '@Thickness', displayName: 'DashboardWebStringId.Chart.Indicator.Thickness', defaultVal: 1, from: floatFromModel };
export let chartIndicatorVisible = { propertyName: 'visible', modelName: '@Visible', displayName: 'DashboardWebStringId.Chart.Indicator.Visible', defaultVal: false, simpleFormAdapterItem: 'yesNoButtonGroupEditor', from: parseBool };
export let chartIndicatorValueLevel = { propertyName: 'valueLevel', modelName: '@ValueLevel', displayName: 'DashboardWebStringId.Chart.Indicator.ValueLevel', isTwoWay: true };
export let chartIndicatorDisplayName = { propertyName: 'displayName', modelName: '@DisplayName' };
export let chartIndicatorTypeName = { propertyName: 'customTypeName', modelName: '@TypeName' };
export let chartIndicatorSerializationInfo = [
    chartIndicatorIgnoreEmptyArgument, chartIndicatorValue,
    chartPaneName, chartIndicatorDisplayName, chartIndicatorType,
    chartIndicatorValueLevel, chartIndicatorDashStyle, chartIndicatorLegendText,
    chartIndicatorShowInLegend,
    chartIndicatorThickness, chartIndicatorVisible, chartIndicatorTypeName,
    chartIndicatorColor
];
