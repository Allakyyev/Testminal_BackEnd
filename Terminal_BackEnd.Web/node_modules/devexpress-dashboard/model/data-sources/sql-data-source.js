/**
* DevExpress Dashboard (sql-data-source.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { CustomSqlQuery, StoredProcQuery, TableQuery } from '@devexpress/analytics-core/analytics-data';
import { deserializeArray, ModelSerializer } from '@devexpress/analytics-core/analytics-utils';
import { SqlQueryType } from '@devexpress/analytics-core/query-builder/dataSource/utils';
import { DataSource } from './data-source';
import { sqlDataSourceSerializationsInfo } from './metadata/_sql-data-source';
export class SqlDataSource extends DataSource {
    constructor(dataSourceJSON = {}, serializer = new ModelSerializer()) {
        super(dataSourceJSON, serializer);
        this.queries = deserializeArray(dataSourceJSON.Queries, item => {
            if (item['@Type'] === SqlQueryType.customSqlQuery) {
                return new CustomSqlQuery(item, null, serializer);
            }
            else if (item['@Type'] === SqlQueryType.tableQuery) {
                return new TableQuery(item, null, serializer);
            }
            else if (item['@Type'] === SqlQueryType.storedProcQuery) {
                return new StoredProcQuery(item, null, serializer);
            }
            else {
                throw new Error('Unknown sql query type.');
            }
        });
        this.hasCalculatedFields = true;
        this.supportDataMembers = true;
    }
    get _isFederationDataProvider() {
        return true;
    }
    getInfo() {
        return sqlDataSourceSerializationsInfo;
    }
    getDisplayNamePrefix() {
        return 'DashboardStringId.DefaultSqlDataSourceName';
    }
    _getDefaultItemType() {
        return 'SqlDataSource';
    }
}
