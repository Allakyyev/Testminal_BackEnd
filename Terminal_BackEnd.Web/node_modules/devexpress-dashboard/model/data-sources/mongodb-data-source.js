/**
* DevExpress Dashboard (mongodb-data-source.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { deserializeArray, ModelSerializer } from '@devexpress/analytics-core/analytics-utils';
import { safeComputed } from '../internal/_knockout-utils';
import { SerializableModel } from '../serializable-model';
import { DataSource } from './data-source';
import { mongoDBDataSourceSerializationsInfo, mongoDBQuerySerializationsInfo } from './metadata/_mongodb-data-source';
export class MongoDBDataSource extends DataSource {
    constructor(dataSourceJSON = {}, serializer = new ModelSerializer()) {
        super(dataSourceJSON, serializer);
        this.queries = deserializeArray(dataSourceJSON.Queries, json => new MongoDBQuery(json, serializer));
        this.hasCalculatedFields = true;
        this.supportDataMembers = true;
    }
    get _isFederationDataProvider() {
        return true;
    }
    getInfo() {
        return mongoDBDataSourceSerializationsInfo;
    }
    getDisplayNamePrefix() {
        return 'DashboardStringId.DefaultMongoDBDataSourceName';
    }
    _getDefaultItemType() {
        return 'MongoDBDataSource';
    }
}
export class MongoDBQuery extends SerializableModel {
    constructor(json = {}, serializer = new ModelSerializer()) {
        super(json, serializer);
        this._actualName = safeComputed({ alias: this.alias, collectionName: this.collectionName }, (args) => {
            return args.alias || args.collectionName;
        });
    }
    getInfo() {
        return mongoDBQuerySerializationsInfo;
    }
    _getDefaultItemType() {
        return 'Query';
    }
}
