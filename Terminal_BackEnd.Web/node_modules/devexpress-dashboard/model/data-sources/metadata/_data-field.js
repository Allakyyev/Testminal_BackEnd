/**
* DevExpress Dashboard (_data-field.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { parseBool } from '../../metadata/_base-metadata';
export let dataFieldDataMember = { propertyName: 'dataMember', modelName: 'DataMember' };
export let dataFieldName = { propertyName: 'name', modelName: 'Name' };
export let nodeType = { propertyName: 'nodeType', modelName: 'NodeType' };
export let groupIndex = { propertyName: 'groupIndex', modelName: 'GroupIndex' };
export let dataFieldChildNodes = { propertyName: 'childNodes', modelName: 'ChildNodes', array: true };
export let dataFieldDisplayName = { propertyName: 'displayName', modelName: 'DisplayName' };
export let dataFieldFieldType = {
    propertyName: 'fieldType', modelName: 'FieldType', defaultVal: 'Unknown', from: (value) => ko.observable(value === 'String' ? 'Text' : value)
};
export let dataFieldIsDataFieldNode = { propertyName: 'isDataFieldNode', modelName: 'IsDataFieldNode', from: parseBool };
export let dataFieldIsAggregate = { propertyName: 'isAggregate', modelName: 'IsAggregateCalculatedField', from: parseBool };
export let dataFieldIsDataMemberNode = { propertyName: 'isDataMemberNode', modelName: 'IsDataMemberNode', from: parseBool };
export let dataFieldIsConvertible = { propertyName: 'isConvertible', modelName: 'IsConvertible', from: parseBool };
export let dataFieldIsComparable = { propertyName: 'isComparable', modelName: 'IsComparable', from: parseBool };
export let dataFieldIsList = { propertyName: 'isList', modelName: 'IsList', from: parseBool };
export let dataFieldIsCorruptedCalcField = { propertyName: 'isCorruptedCalcField', modelName: 'IsCorruptedCalculatedField', from: parseBool };
export let dataFieldIsDataSourceNode = { propertyName: 'isDataSourceNode', modelName: 'IsDataSourceNode', from: parseBool };
export let dataFieldIsDataTableNode = { propertyName: 'isDataTableNode', modelName: 'IsDataTableNode', from: parseBool };
export let dataFieldIsExpressionsNode = { propertyName: 'isExpressionsNode', modelName: 'IsExpressionsNode', from: parseBool };
export let dataFieldSerializationsInfo = [dataFieldDataMember, dataFieldName, dataFieldChildNodes, dataFieldDisplayName, dataFieldFieldType, dataFieldIsDataMemberNode, dataFieldIsDataFieldNode, dataFieldIsConvertible, dataFieldIsComparable, nodeType, groupIndex, dataFieldIsAggregate, dataFieldIsList, dataFieldIsCorruptedCalcField, dataFieldIsDataSourceNode, dataFieldIsDataTableNode, dataFieldIsExpressionsNode];
