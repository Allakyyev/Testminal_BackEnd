/**
* DevExpress Dashboard (data-item-format.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ModelSerializer } from '@devexpress/analytics-core/analytics-utils';
import { SerializableModel } from '../serializable-model';
import { absoluteVariationNumericFormatSerializationsInfo, dataItemDateTimeFormatSerializationsInfo, dataItemNumericFormatSerializationsInfo, percentOfTargetNumericFormatSerializationsInfo, percentVariationNumericFormatSerializationsInfo } from './metadata/_data-item-format';
export class DataItemNumericFormat extends SerializableModel {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
    }
    getInfo() {
        return dataItemNumericFormatSerializationsInfo;
    }
    _getViewModel() {
        return {
            NumericFormat: {
                CurrencyCulture: this.currencyCultureName(),
                FormatType: this.formatType(),
                Precision: this.precision(),
                Unit: this.unit(),
                IncludeGroupSeparator: this.includeGroupSeparator()
            }
        };
    }
}
export class AbsoluteVariationNumericFormat extends DataItemNumericFormat {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
    }
    getInfo() {
        return absoluteVariationNumericFormatSerializationsInfo;
    }
}
export class PercentVariationNumericFormat extends DataItemNumericFormat {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
    }
    getInfo() {
        return percentVariationNumericFormatSerializationsInfo;
    }
}
export class PercentOfTargetNumericFormat extends DataItemNumericFormat {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
    }
    getInfo() {
        return percentOfTargetNumericFormatSerializationsInfo;
    }
}
export class DataItemDateTimeFormat extends SerializableModel {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
    }
    getInfo() {
        return dataItemDateTimeFormatSerializationsInfo;
    }
    _getViewModel(groupInterval) {
        return {
            DateTimeFormat: {
                GroupInterval: groupInterval || 'None',
                YearFormat: this.yearFormat(),
                QuarterFormat: this.quarterFormat(),
                MonthFormat: this.monthFormat(),
                DayOfWeekFormat: this.dayOfWeekFormat(),
                DateFormat: this.dateFormat(),
                DateHourFormat: this.dateHourFormat(),
                DateHourMinuteFormat: this.dateHourMinuteFormat(),
                DateTimeFormat: this.dateTimeFormat(),
                HourFormat: this.hourFormat(),
                ExactDateFormat: this.exactDateFormat()
            }
        };
    }
}
