/**
* DevExpress Dashboard (measure.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ModelSerializer } from '@devexpress/analytics-core/analytics-utils';
import { DataItem } from './data-item';
import { measureItemSerializationsInfo } from './metadata/_measure';
export class Measure extends DataItem {
    constructor(dataItemJSON = {}, serializer = new ModelSerializer()) {
        super(dataItemJSON, serializer);
        this.addDisposable(this.expression.subscribe(val => {
            if (val !== undefined) {
                this.calculation.calculation(undefined);
            }
        }));
        this.addDisposable(this.calculation, this.windowDefinition);
    }
    getInfo() {
        return measureItemSerializationsInfo;
    }
    grabFrom(dataItem) {
        super.grabFrom(dataItem);
        if (!(dataItem instanceof Measure))
            return;
        this.summaryType(dataItem.summaryType());
    }
    isDefinitionEquals(dataItem) {
        return super.isDefinitionEquals(dataItem) && (dataItem instanceof Measure) &&
            this.summaryType() === dataItem.summaryType() && this.expression() === dataItem.expression() &&
            this.calculation.calculationType() === dataItem.calculation.calculationType() &&
            this.windowDefinition.equals(dataItem.windowDefinition) &&
            this.filterString() === dataItem.filterString();
    }
    _hasCalculation() {
        return !this.calculation.isEmpty() || !!this.expression();
    }
    _getDefaultItemType() {
        return 'Measure';
    }
}
