/**
* DevExpress Dashboard (measure-calculation.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ModelSerializer } from '@devexpress/analytics-core/analytics-utils';
import { SerializableModel } from '../../serializable-model';
import { measureCalculationSerializationsInfo } from './metadata/_measure-calculation';
export class MeasureCalculation extends SerializableModel {
    static _getWindowAggrFunction(summaryType) {
        switch (summaryType) {
            case 'Sum':
                return 'WindowSum';
            case 'Average':
                return 'WindowAvg';
            case 'Count':
                return 'WindowCount';
            case 'CountDistinct':
                return 'WindowCountDistinct';
            case 'Max':
                return 'WindowMax';
            case 'Median':
                return 'WindowMedian';
            case 'Mode':
                return 'WindowMode';
            case 'Min':
                return 'WindowMin';
            case 'StdDev':
                return 'WindowStdDev';
            case 'StdDevp':
                return 'WindowStdDevp';
            case 'Var':
                return 'WindowVar';
            case 'Varp':
                return 'WindowVarp';
            default:
                throw new Error('WindowAggrFunction: Unsupported SummaryType');
        }
    }
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson || {}, serializer);
    }
    getInfo() {
        return measureCalculationSerializationsInfo;
    }
    _getAggrName(summaryType) {
        return MeasureCalculation._getWindowAggrFunction(summaryType);
    }
}
export let calculationsTypesMap = {};
