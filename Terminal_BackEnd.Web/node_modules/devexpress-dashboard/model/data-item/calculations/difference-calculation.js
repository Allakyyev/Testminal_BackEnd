/**
* DevExpress Dashboard (difference-calculation.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ModelSerializer } from '@devexpress/analytics-core/analytics-utils';
import { calculationsTypesMap, MeasureCalculation } from './measure-calculation';
import { differenceCalculationSerializationsInfo } from './metadata/_difference-calculation';
export class DifferenceCalculation extends MeasureCalculation {
    constructor(modelJson = {}, serializer = new ModelSerializer()) {
        super(modelJson, serializer);
    }
    static getLookupShiftExpression(target) {
        switch (target) {
            case 'Previous':
                return '-1';
            case 'Next':
                return '1';
            case 'First':
                return 'First()';
            case 'Last':
                return 'First()';
            default:
                throw new Error('Unsupported Target');
        }
    }
    get name() {
        return 'DashboardWebStringId.Calculations.DifferenceCalculation';
    }
    get lookupShiftExpression() {
        return DifferenceCalculation.getLookupShiftExpression(this.target());
    }
    getInfo() {
        return differenceCalculationSerializationsInfo;
    }
    _createInstance() {
        return new DifferenceCalculation();
    }
    _getExpression(argument) {
        switch (this.differenceType()) {
            case 'Absolute':
                return `${argument} - Lookup(${argument}, ${this.lookupShiftExpression})`;
            case 'Percentage':
                return `ToDouble(${argument} - Lookup(${argument}, ${this.lookupShiftExpression})) / Lookup(${argument}, ${this.lookupShiftExpression})`;
            default:
                throw new Error('Unexpected DifferenceType');
        }
    }
}
calculationsTypesMap['DifferenceCalculation'] = DifferenceCalculation;
