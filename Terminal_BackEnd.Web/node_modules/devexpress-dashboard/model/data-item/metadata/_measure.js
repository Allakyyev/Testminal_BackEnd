/**
* DevExpress Dashboard (_measure.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { replaceExpressionParametersPrefix } from '../../internal/_expression-utils';
import { Calculation } from '../calculations/calculation';
import { WindowDefinition } from '../window-definition/window-definition';
import { dataItemSerializationsInfo } from './_data-item';
export let summaryTypeDict = {
    'Count': 'DashboardStringId.SummaryTypeCount',
    'CountDistinct': 'DashboardStringId.SummaryTypeCountDistinct',
    'Sum': 'DashboardStringId.SummaryTypeSum',
    'Min': 'DashboardStringId.SummaryTypeMin',
    'Max': 'DashboardStringId.SummaryTypeMax',
    'Average': 'DashboardStringId.SummaryTypeAverage',
    'StdDev': 'DashboardStringId.SummaryTypeStdDev',
    'StdDevp': 'DashboardStringId.SummaryTypeStdDevp',
    'Var': 'DashboardStringId.SummaryTypeVar',
    'Varp': 'DashboardStringId.SummaryTypeVarp',
    'Median': 'DashboardStringId.SummaryTypeMedian',
    'Mode': 'DashboardStringId.SummaryTypeMode'
};
export let summaryTypeTemplate = {
    propertyName: 'summaryType', modelName: '@SummaryType', displayName: 'DashboardWebStringId.SummaryType'
};
export let summaryTypeNumericToAny = Object.assign({ defaultVal: 'Sum', simpleFormAdapterItem: 'selectBoxEditor', values: summaryTypeDict }, summaryTypeTemplate);
export let summaryTypeAttribute = Object.assign({ defaultVal: 'Min', simpleFormAdapterItem: 'buttonGroupEditor', values: {
        'Min': 'DashboardStringId.SummaryTypeMin'
    } }, summaryTypeTemplate);
export let summaryTypeNonNumericToNumeric = Object.assign({ defaultVal: 'Count', simpleFormAdapterItem: 'buttonGroupEditor', values: {
        'Count': 'DashboardStringId.SummaryTypeCount',
        'CountDistinct': 'DashboardStringId.SummaryTypeCountDistinct'
    } }, summaryTypeTemplate);
export let summaryTypeNonNumericToString = Object.assign({ defaultVal: 'Count', simpleFormAdapterItem: 'selectBoxEditor', values: {
        'Count': 'DashboardStringId.SummaryTypeCount',
        'CountDistinct': 'DashboardStringId.SummaryTypeCountDistinct',
        'Min': 'DashboardStringId.SummaryTypeMin',
        'Max': 'DashboardStringId.SummaryTypeMax',
        'Mode': 'DashboardStringId.SummaryTypeMode'
    } }, summaryTypeTemplate);
export let calculation = { propertyName: 'calculation', modelName: 'Calculation', type: Calculation };
export let windowDefinition = { propertyName: 'windowDefinition', modelName: 'WindowDefinition', type: WindowDefinition, displayName: 'DashboardWebStringId.Calculations.WindowDefinition' };
export let expression = { propertyName: 'expression', modelName: '@Expression', from: (expressionStr) => {
        return replaceExpressionParametersPrefix(expressionStr);
    } };
export let calculations = { propertyName: 'calculations' };
export let measureFilterString = { propertyName: 'filterString', modelName: '@FilterString', from: (filterStr) => {
        return replaceExpressionParametersPrefix(filterStr);
    } };
export let measureItemSerializationsInfo = dataItemSerializationsInfo.concat(summaryTypeNumericToAny, calculation, windowDefinition, expression, measureFilterString);
