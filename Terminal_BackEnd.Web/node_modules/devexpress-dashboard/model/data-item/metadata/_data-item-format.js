/**
* DevExpress Dashboard (_data-item-format.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { deepExtend } from '../../../data/_jquery-helpers';
import { floatFromModel, parseBool } from '../../metadata/_base-metadata';
export let formatTypeValues = {
    'Auto': 'DashboardStringId.NumericFormatFormatTypeAutoCaption',
    'General': 'DashboardStringId.NumericFormatFormatTypeGeneralCaption',
    'Number': 'DashboardStringId.NumericFormatFormatTypeNumberCaption',
    'Currency': 'DashboardStringId.NumericFormatFormatTypeCurrencyCaption',
    'Scientific': 'DashboardStringId.NumericFormatFormatTypeScientificCaption',
    'Percent': 'DashboardStringId.NumericFormatFormatTypePercentCaption',
    'Custom': 'Custom'
};
export let customFormatString = { propertyName: 'customFormatString', modelName: '@CustomFormatString', displayName: 'Custom Format String', simpleFormAdapterItem: 'textBoxEditor' };
export let formatType = { propertyName: 'formatType', modelName: '@FormatType', displayName: 'DashboardWebStringId.FormatType', simpleFormAdapterItem: 'selectBoxEditor', values: formatTypeValues };
export let unit = {
    propertyName: 'unit', modelName: '@Unit', displayName: 'DashboardStringId.NumericFormatUnitCaption', defaultVal: 'Auto', simpleFormAdapterItem: 'selectBoxEditor', values: {
        'Auto': 'DashboardStringId.NumericFormatUnitAutoCaption',
        'Ones': 'DashboardStringId.NumericFormatUnitOnesCaption',
        'Thousands': 'DashboardStringId.NumericFormatUnitThousandsCaption',
        'Millions': 'DashboardStringId.NumericFormatUnitMillionsCaption',
        'Billions': 'DashboardStringId.NumericFormatUnitBillionsCaption'
    }
};
export let precision = { propertyName: 'precision', modelName: '@Precision', displayName: 'DashboardWebStringId.DataItem.Precision', simpleFormAdapterItem: 'numberBoxEditor', from: floatFromModel, validationRules: [{ type: 'custom', validationCallback: (options) => { return options.value >= 0; }, message: "Precision shouldn't be negative." }] };
export let includeGroupSeparator = { propertyName: 'includeGroupSeparator', modelName: '@IncludeGroupSeparator', displayName: 'DashboardWebStringId.DataItem.IncludeGroupSeparator', defaultVal: false, simpleFormAdapterItem: 'onOffButtonGroupEditor', from: parseBool };
export let dataItemCurrencyCultureName = { propertyName: 'currencyCultureName', modelName: '@CurrencyCultureName', displayName: 'DashboardStringId.NumericFormatFormatTypeCurrencyCaption', defaultVal: null };
const getNumericFormat = (defaultFormatType, defaultPrecision) => ([Object.assign(Object.assign({}, formatType), { defaultVal: defaultFormatType }), unit, Object.assign(Object.assign({}, precision), { defaultVal: defaultPrecision }), includeGroupSeparator,
    dataItemCurrencyCultureName,
    customFormatString]);
export let dataItemNumericFormatSerializationsInfo = getNumericFormat('Auto', 2);
export let absoluteVariationNumericFormatSerializationsInfo = getNumericFormat('Number', 0);
export let percentVariationNumericFormatSerializationsInfo = getNumericFormat('Percent', 2);
export let percentOfTargetNumericFormatSerializationsInfo = getNumericFormat('Percent', 2);
export let yearFormat = {
    propertyName: 'yearFormat', modelName: '@YearFormat', displayName: 'DashboardWebStringId.FormatType', defaultVal: 'Default', simpleFormAdapterItem: 'buttonGroupEditor', values: {
        'Default': 'DashboardStringId.DateTimeFormatYearFormatDefaultCaption',
        'Full': 'DashboardStringId.DateTimeFormatYearFormatFullCaption',
        'Abbreviated': 'DashboardStringId.DateTimeFormatYearFormatAbbreviatedCaption'
    }
};
export let namelessYearFormat = deepExtend({}, yearFormat);
delete namelessYearFormat.displayName;
export let quarterFormat = {
    propertyName: 'quarterFormat', modelName: '@QuarterFormat', displayName: 'DashboardWebStringId.FormatType', defaultVal: 'Default', simpleFormAdapterItem: 'buttonGroupEditor', values: {
        'Default': 'DashboardStringId.DateTimeFormatQuarterFormatDefaultCaption',
        'Numeric': 'DashboardStringId.DateTimeFormatQuarterFormatNumericCaption',
        'Full': 'DashboardStringId.DateTimeFormatQuarterFormatFullCaption'
    }
};
export let namelessQuarterFormat = deepExtend({}, quarterFormat);
delete namelessQuarterFormat.displayName;
export let monthFormat = {
    propertyName: 'monthFormat', modelName: '@MonthFormat', displayName: 'DashboardWebStringId.FormatType', defaultVal: 'Default', simpleFormAdapterItem: 'buttonGroupEditor', values: {
        'Default': 'DashboardStringId.DateTimeFormatMonthFormatDefaultCaption',
        'Full': 'DashboardStringId.DateTimeFormatMonthFormatFullCaption',
        'Abbreviated': 'DashboardStringId.DateTimeFormatMonthFormatAbbreviatedCaption',
        'Numeric': 'DashboardStringId.DateTimeFormatMonthFormatNumericCaption'
    }
};
export let namelessMonthFormat = deepExtend({}, monthFormat);
delete namelessMonthFormat.displayName;
export let dayOfWeekFormat = {
    propertyName: 'dayOfWeekFormat', modelName: '@DayOfWeekFormat', displayName: 'DashboardWebStringId.FormatType', defaultVal: 'Default', simpleFormAdapterItem: 'listEditor', values: {
        'Default': 'DashboardStringId.DateTimeFormatDayOfWeekFormatDefaultCaption',
        'Full': 'DashboardStringId.DateTimeFormatDayOfWeekFormatFullCaption',
        'Abbreviated': 'DashboardStringId.DateTimeFormatDayOfWeekFormatAbbreviatedCaption',
        'Numeric': 'DashboardStringId.DateTimeFormatDayOfWeekFormatNumericCaption'
    }
};
export let namelessDayOfWeekFormat = deepExtend({}, dayOfWeekFormat);
delete namelessDayOfWeekFormat.displayName;
export let dateFormat = {
    propertyName: 'dateFormat', modelName: '@DateFormat', displayName: 'DashboardWebStringId.FormatType', defaultVal: 'Default', simpleFormAdapterItem: 'buttonGroupEditor', values: {
        'Default': 'DashboardStringId.DateTimeFormatDateFormatDefaultCaption',
        'Long': 'DashboardStringId.DateTimeFormatDateFormatLongCaption',
        'Short': 'DashboardStringId.DateTimeFormatDateFormatShortCaption'
    }
};
export let namelessDateFormat = deepExtend({}, dateFormat);
delete namelessDateFormat.displayName;
export let dateHourFormat = {
    propertyName: 'dateHourFormat', modelName: '@DateHourFormat', displayName: 'DashboardWebStringId.FormatType', defaultVal: 'Default', simpleFormAdapterItem: 'buttonGroupEditor', values: {
        'Default': 'DashboardStringId.DateTimeFormatDateTimeFormatDefaultCaption',
        'Long': 'DashboardStringId.DateTimeFormatDateTimeFormatLongCaption',
        'Short': 'DashboardStringId.DateTimeFormatDateTimeFormatShortCaption',
        'TimeOnly': 'DashboardStringId.DateTimeFormatDateTimeFormatTimeOnlyCaption'
    }
};
export let namelessDateHourFormat = deepExtend({}, dateHourFormat);
delete namelessDateHourFormat.displayName;
export let dateHourMinuteFormat = {
    propertyName: 'dateHourMinuteFormat', modelName: '@DateHourMinuteFormat', displayName: 'DashboardWebStringId.FormatType', defaultVal: 'Default', simpleFormAdapterItem: 'buttonGroupEditor', values: {
        'Default': 'DashboardStringId.DateTimeFormatDateTimeFormatDefaultCaption',
        'Long': 'DashboardStringId.DateTimeFormatDateTimeFormatLongCaption',
        'Short': 'DashboardStringId.DateTimeFormatDateTimeFormatShortCaption',
        'TimeOnly': 'DashboardStringId.DateTimeFormatDateTimeFormatTimeOnlyCaption'
    }
};
export let namelessDateHourMinuteFormat = deepExtend({}, dateHourMinuteFormat);
delete namelessDateHourMinuteFormat.displayName;
export let dateTimeWithSecondsFormat = {
    propertyName: 'dateTimeFormat', modelName: '@DateTimeFormat', displayName: 'DashboardWebStringId.FormatType', defaultVal: 'Default', simpleFormAdapterItem: 'buttonGroupEditor', values: {
        'Default': 'DashboardStringId.DateTimeFormatDateTimeFormatDefaultCaption',
        'Long': 'DashboardStringId.DateTimeFormatDateTimeFormatLongCaption',
        'Short': 'DashboardStringId.DateTimeFormatDateTimeFormatShortCaption',
        'TimeOnly': 'DashboardStringId.DateTimeFormatDateTimeFormatTimeOnlyCaption'
    }
};
export let namelessDateTimeWithSecondsFormat = deepExtend({}, dateTimeWithSecondsFormat);
delete namelessDateTimeWithSecondsFormat.displayName;
export let hourFormat = {
    propertyName: 'hourFormat', modelName: '@HourFormat', displayName: 'DashboardWebStringId.FormatType', defaultVal: 'Default', simpleFormAdapterItem: 'buttonGroupEditor', values: {
        'Default': 'DashboardStringId.DateTimeFormatDateTimeFormatDefaultCaption',
        'Short': 'DashboardStringId.DateTimeFormatDateTimeFormatShortCaption',
        'Long': 'DashboardStringId.DateTimeFormatDateTimeFormatLongCaption'
    }
};
export let namelessHourFormat = deepExtend({}, hourFormat);
delete namelessHourFormat.displayName;
export let exactDateFormat = {
    propertyName: 'exactDateFormat', modelName: '@ExactDateFormat', displayName: 'DashboardWebStringId.FormatType', defaultVal: 'Day', simpleFormAdapterItem: 'listEditor', values: {
        'Year': 'DashboardStringId.ExactDateFormatYear',
        'Quarter': 'DashboardStringId.ExactDateFormatQuarter',
        'Month': 'DashboardStringId.ExactDateFormatMonth',
        'Day': 'DashboardStringId.ExactDateFormatDay',
        'Hour': 'DashboardStringId.ExactDateFormatHour',
        'Minute': 'DashboardStringId.ExactDateFormatMinute',
        'Second': 'DashboardStringId.ExactDateFormatSecond'
    }
};
export let namelessExactDateFormat = deepExtend({}, exactDateFormat);
delete namelessExactDateFormat.displayName;
export let dataItemDateTimeFormatSerializationsInfo = [yearFormat, quarterFormat, monthFormat, dayOfWeekFormat, dateFormat, dateHourFormat, dateHourMinuteFormat, dateTimeWithSecondsFormat, hourFormat, exactDateFormat];
