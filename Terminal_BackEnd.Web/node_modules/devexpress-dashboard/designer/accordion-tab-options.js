/**
* DevExpress Dashboard (accordion-tab-options.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { _customMetadataContainsProperty } from '../model/custom-properties/custom-properties-metadata';
import { ObjectPropertiesWrapper } from './form-adapter/_object-properties-wrapper';
import { AccordionTab } from './properties-controller/_accordion-tab';
const CustomTabOrderNo = 500000;
export function _customizeTabs(tabs, customSectionOption, object) {
    customSectionOption.items.forEach(item => {
        if (item.dataField && !_customMetadataContainsProperty(item.dataField) && !object.customProperties._isKnownProperty(item.dataField)) {
            console.warn(`You cannot create an editor for the '${item.dataField}' because the custom property with this name is not registered. First, pass the corresponding custom property options to the registerCustomProperty method.`);
        }
    });
    if (customSectionOption.items.some(formOption => !!object.customProperties._isKnownProperty(formOption.dataField))) {
        let wrapper = new ObjectPropertiesWrapper({
            model: object.customProperties,
            properties: customSectionOption.items.map(formItem => {
                return {
                    propertyName: formItem.dataField,
                    dxFormItem: formItem
                };
            })
        });
        wrapper.onContentReady = customSectionOption.onContentReady;
        wrapper.onInitialized = customSectionOption.onInitialized;
        wrapper.onFieldDataChanged = customSectionOption.onFieldDataChanged;
        var tab = new AccordionTab(customSectionOption.title, customSectionOption.title, wrapper);
        tab.orderNo = CustomTabOrderNo;
        tabs.push(tab);
    }
}
