/**
* DevExpress Dashboard (parameters-editor-extension.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { designerExtensions, extensionNameMap } from '../../common/control-options';
import { DashboardMenuItem } from '../toolbox-extension/toolbox-items';
import { ParameterListEditorViewModel } from './_parameter-list-editor-viewmodel';
const name = 'dashboardParameterEditor';
const nameAlias = 'dashboard-parameter-editor';
export class DashboardParameterEditorExtension {
    constructor(dashboardControl) {
        this.dashboardControl = dashboardControl;
        this.name = name;
        this.dashboard = ko.computed(() => dashboardControl.dashboard());
        this._viewModel = new ParameterListEditorViewModel(this.dashboard, () => dashboardControl._dataSourceBrowser);
        this._menuItem = new DashboardMenuItem(nameAlias, 'DashboardWebStringId.DashboardParameters', 240, 80);
        this._menuItem.template = 'dx-dashboard-form-parameters-settings';
        this._menuItem.data = this._viewModel;
        this._menuItem.disabled = ko.computed(() => !dashboardControl.dashboard());
    }
    start() {
        this._viewModel.initialize();
        var toolboxExtension = this.dashboardControl.findExtension('toolbox');
        if (toolboxExtension) {
            toolboxExtension.menuItems.push(this._menuItem);
        }
    }
    stop() {
        var toolboxExtension = this.dashboardControl.findExtension('toolbox');
        if (toolboxExtension) {
            toolboxExtension.menuItems.remove(this._menuItem);
        }
        this._viewModel.dispose();
    }
}
designerExtensions[nameAlias] = (dashboardControl, options) => new DashboardParameterEditorExtension(dashboardControl);
extensionNameMap[nameAlias] = name;
