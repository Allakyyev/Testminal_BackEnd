/**
* DevExpress Dashboard (_choropleth-map-item-properties-composer.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { attributeName, includeSummaryValueToShapeTitle, tooltipAttributeName } from '../../../model/items/map/metadata/_chorolpeth-map-item';
import { lockNavigation } from '../../../model/items/map/metadata/_map-item';
import { ObjectPropertiesWrapper } from '../../form-adapter/_object-properties-wrapper';
import { AccordionTab, KnownTabs } from '../../properties-controller/_accordion-tab';
import { DashboardItemPropertiesComposer } from './_base-properties-composer';
import { SharedComposers } from './_shared-composers';
export class ChoroplethMapItemPropertiesComposer extends DashboardItemPropertiesComposer {
    constructor(customizeHandler) {
        super(customizeHandler);
    }
    _composeTabsCore(model, args) {
        const commonTabWrapper = SharedComposers.getCommonMapWrapper(model, args.propertiesController, [
            SharedComposers.getAttributeNamesSerializationInfo(model, attributeName, false),
            lockNavigation
        ]);
        return [
            new AccordionTab(KnownTabs.Common, 'DashboardWebStringId.AccordionTab.Common', commonTabWrapper),
            new AccordionTab(KnownTabs.ShapeLabels, 'DashboardWebStringId.AccordionTab.ChoroplethMapShapeLabelsAttribute', this.getShapeLabelsWrapper(model)),
            new AccordionTab(KnownTabs.ColorLegend, 'DashboardWebStringId.AccordionTab.MapLegend', SharedComposers.getColorLegendWrapper(model))
        ];
    }
    getShapeLabelsWrapper(model) {
        var properties = [
            SharedComposers.getShapeTitleSerializationInfo(model),
            SharedComposers.getAttributeNamesSerializationInfo(model, tooltipAttributeName, true, 'DashboardWebStringId.Map.UseBindingAttribute'),
            includeSummaryValueToShapeTitle
        ];
        var disabledRules = {};
        return new ObjectPropertiesWrapper({
            model: model,
            properties: properties,
            disabledFilterRules: disabledRules
        });
    }
}
