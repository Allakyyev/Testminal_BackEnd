/**
* DevExpress Dashboard (_date-filter-item-properties-composer.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { getLocalizationById } from '../../../data/localization/_default';
import { arrangementMode, datePickerLocation, displayTextPattern, filterType } from '../../../model/items/filter-items/metadata/_date-filter-item';
import { ObjectPropertiesWrapper } from '../../form-adapter/_object-properties-wrapper';
import { AccordionTab, KnownTabs } from '../../properties-controller/_accordion-tab';
import { DashboardItemPropertiesComposer } from './_base-properties-composer';
import { SharedComposers } from './_shared-composers';
export class DateFilterItemPropertiesComposer extends DashboardItemPropertiesComposer {
    constructor(customizeHandler, editRuleHandler) {
        super(customizeHandler);
        this.editRuleHandler = editRuleHandler;
    }
    _composeTabsCore(model, args) {
        return [
            new AccordionTab(KnownTabs.Common, 'DashboardWebStringId.AccordionTab.Common', SharedComposers.getCommonWrapper(model, [], {})),
            new AccordionTab(KnownTabs.Layout, 'DashboardWebStringId.AccordionTab.Layout', this.getLayoutWrapper(model)),
            new AccordionTab(KnownTabs.CustomRanges, 'DashboardWebStringId.RangeFilter.CustomPeriods', SharedComposers.getCustomRangesWrapper(model, this.editRuleHandler, args.dataSourceBrowser, model.dimension))
        ];
    }
    getLayoutWrapper(model) {
        var properties = [
            filterType,
            arrangementMode,
            datePickerLocation,
            displayTextPattern
        ];
        displayTextPattern.editorOptions['placeholder'] = getLocalizationById(displayTextPattern.editorOptions['placeholder']);
        return new ObjectPropertiesWrapper({
            model: model,
            properties: properties
        });
    }
}
