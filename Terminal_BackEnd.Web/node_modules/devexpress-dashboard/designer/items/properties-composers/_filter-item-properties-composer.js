/**
* DevExpress Dashboard (_filter-item-properties-composer.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ComboBoxItem } from '../../../model/items/filter-items/combo-box-item';
import { ListBoxItem } from '../../../model/items/filter-items/list-box-item';
import { comboBoxType } from '../../../model/items/filter-items/metadata/_combo-box-item';
import { enableSearch, showAllValue } from '../../../model/items/filter-items/metadata/_filter-element-item-base';
import { listBoxType } from '../../../model/items/filter-items/metadata/_list-box-item';
import { autoExpand } from '../../../model/items/filter-items/metadata/_tree-view-item';
import { AccordionTab, KnownTabs } from '../../properties-controller/_accordion-tab';
import { DashboardItemPropertiesComposer } from './_base-properties-composer';
import { SharedComposers } from './_shared-composers';
export class FilterItemPropertiesComposer extends DashboardItemPropertiesComposer {
    constructor(customizeHandler) {
        super(customizeHandler);
    }
    _composeTabsCore(model) {
        var disabledRules = {};
        disabledRules[showAllValue.propertyName] = (args) => {
            var model = args.model;
            if (model instanceof ListBoxItem) {
                return model.listBoxType() === 'Checked';
            }
            if (model instanceof ComboBoxItem) {
                return model.comboBoxType() === 'Checked';
            }
            return false;
        };
        var showAllValuePropertyInfo = showAllValue;
        if (model._useNeutralFilterMode()) {
            showAllValuePropertyInfo.displayName = 'DashboardWebStringId.FilterItem.AllowEmptyFilter';
        }
        var result = [
            new AccordionTab(KnownTabs.Common, 'DashboardWebStringId.AccordionTab.Common', SharedComposers.getCommonWrapper(model, [
                comboBoxType,
                listBoxType,
                showAllValue,
                autoExpand,
                enableSearch
            ], disabledRules))
        ];
        return result;
    }
}
