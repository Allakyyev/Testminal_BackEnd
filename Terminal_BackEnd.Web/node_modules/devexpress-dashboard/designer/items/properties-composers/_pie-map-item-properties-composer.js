/**
* DevExpress Dashboard (_pie-map-item-properties-composer.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { enableClustering } from '../../../model/items/map/metadata/_geo-point-map-item-base';
import { lockNavigation } from '../../../model/items/map/metadata/_map-item';
import { isWeighted } from '../../../model/items/map/metadata/_pie-map-item';
import { AccordionTab, KnownTabs } from '../../properties-controller/_accordion-tab';
import { DashboardItemPropertiesComposer } from './_base-properties-composer';
import { SharedComposers } from './_shared-composers';
export class PieMapItemPropertiesComposer extends DashboardItemPropertiesComposer {
    constructor(customizeHandler) {
        super(customizeHandler);
    }
    _composeTabsCore(model, args) {
        var commonTab = new AccordionTab(KnownTabs.Common, 'DashboardWebStringId.AccordionTab.Common');
        ko.computed(() => {
            commonTab.tabModel(SharedComposers.getCommonMapWrapper(model, args.propertiesController, [
                lockNavigation,
                enableClustering,
                SharedComposers.getShapeTitleSerializationInfo(model),
                isWeighted
            ]));
        });
        return [
            commonTab,
            new AccordionTab(KnownTabs.ColorLegend, 'DashboardWebStringId.AccordionTab.MapLegend', SharedComposers.getColorLegendWrapper(model)),
            new AccordionTab(KnownTabs.WeightedLegend, 'DashboardWebStringId.AccordionTab.WeightedLegend', SharedComposers.getWeightedLegendWrapper(model))
        ];
    }
}
