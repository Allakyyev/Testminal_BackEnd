/**
* DevExpress Dashboard (_tab-container-item-surface.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { TabContainerItemPropertiesComposer } from '../properties-composers/_tab-container-item-properties-composer';
import { DashboardTabPagePropertiesComposer } from '../properties-composers/_tab-page-properties-composer';
import { surfaceItemsFactory } from '../_section-descriptors';
import { BaseItemSurface } from './_base-item-surface';
export class TabContainerItemSurface extends BaseItemSurface {
    constructor(dashboardItem, _dashboardModel, dataSourceBrowser) {
        super();
        this.dashboardItem = dashboardItem;
        this._dashboardModel = _dashboardModel;
    }
    getPropertiesComposer() {
        const editTabPageHandler = (tabPage, args) => {
            const composer = new DashboardTabPagePropertiesComposer(this._dashboardItemCustomization);
            const tabs = composer.composeTabs(tabPage);
            this.propertiesController.secondaryModel({
                displayText: ko.pureComputed(() => this._dashboardModel._getDisplayDashboardItem(tabPage).name()),
                data: {
                    model: tabPage,
                    propertiesTabs: ko.observableArray(tabs)
                },
                containingCollection: this.dashboardItem.tabPages
            });
        };
        return new TabContainerItemPropertiesComposer(editTabPageHandler);
    }
    dispose() {
    }
}
surfaceItemsFactory.register('TabContainer', TabContainerItemSurface);
