/**
* DevExpress Dashboard (_pie-item-surface.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { PieItemPropertiesComposer } from '../properties-composers/_pie-item-properties-composer';
import { DataItemCollectionSurface } from '../sections/_data-item-collection-surface';
import { SectionDescriptors, surfaceItemsFactory } from '../_section-descriptors';
import { DataDashboardItemSurface } from './_base-item-surface';
export class PieItemSurface extends DataDashboardItemSurface {
    fillSections() {
        this.dataSections.push(new DataItemCollectionSurface(this, SectionDescriptors.Values, undefined, ko.computed(() => (this.dashboardItem.arguments().length > 0 || this.dashboardItem.seriesDimensions().length > 0) && this.dashboardItem.values().length === 0)));
        this.dataSections.push(new DataItemCollectionSurface(this, SectionDescriptors.Arguments));
        this.dataSections.push(new DataItemCollectionSurface(this, SectionDescriptors.SeriesDimension));
    }
    constructor(dashboardItem, dashboardModel, dataSourceBrowser, notificationController) {
        super(dashboardItem, dashboardModel, dataSourceBrowser, notificationController);
    }
    getPropertiesComposer() {
        return new PieItemPropertiesComposer(this._dashboardItemCustomization);
    }
}
surfaceItemsFactory.register('Pie', PieItemSurface);
