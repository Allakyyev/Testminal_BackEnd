/**
* DevExpress Dashboard (_bound-image-item-surface.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { imageItem } from '../../../model/items/metadata/_bound-image-item';
import { BoundImageItemPropertiesComposer } from '../properties-composers/_bound-image-item-properties-composer';
import { SingleDataItemSurface } from '../sections/_single-data-item-surface';
import { surfaceItemsFactory } from '../_section-descriptors';
import { DataDashboardItemSurface } from './_base-item-surface';
export class BoundImageItemSurface extends DataDashboardItemSurface {
    fillSections() {
        this.dataSections.push(new SingleDataItemSurface({
            itemSurface: this,
            sectionInfo: {
                title: 'DashboardWebStringId.Binding.Attribute',
                bindingProperty: {
                    propertyName: imageItem.propertyName,
                    dataItemType: 'Dimension',
                    emptyPlaceholder: 'DashboardWebStringId.Binding.SetAttribute',
                    selectedPlaceholder: 'DashboardWebStringId.Binding.ConfigureAttribute'
                }
            }
        }));
    }
    constructor(dashboardItem, dashboardModel, dataSourceBrowser, notificationController) {
        super(dashboardItem, dashboardModel, dataSourceBrowser, notificationController);
    }
    getPropertiesComposer() {
        return new BoundImageItemPropertiesComposer(this._dashboardItemCustomization);
    }
}
surfaceItemsFactory.register('BoundImage', BoundImageItemSurface);
