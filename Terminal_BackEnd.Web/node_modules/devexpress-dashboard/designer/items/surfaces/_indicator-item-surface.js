/**
* DevExpress Dashboard (_indicator-item-surface.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { AccordionTab, KnownTabs } from '../../properties-controller/_accordion-tab';
import { ChartIndicatorPropertiesComposer } from '../properties-composers/_chart-indicators-properties-composer';
export class IndicatorSurface {
    constructor(model, dashboardItem, dataSourceBrowser, propertiesController) {
        this.model = model;
        this.dashboardItem = dashboardItem;
        this.dataSourceBrowser = dataSourceBrowser;
        this.propertiesController = propertiesController;
    }
    updatePropertiesTabs(requestRecalculation, findExtension) {
        var propertiesTabs = [
            new AccordionTab(KnownTabs.IndicatorSettings, 'DashboardWebStringId.Chart.IndicatorSettings', ChartIndicatorPropertiesComposer.getIndicatorPropertiesWrapper(this.model(), this.dashboardItem, this.dataSourceBrowser, requestRecalculation, findExtension))
        ];
        this.propertiesController.secondaryModel({
            displayText: this.model().name,
            data: {
                model: this.model(),
                propertiesTabs: ko.observableArray(propertiesTabs)
            },
            containingCollection: this.dashboardItem.indicators
        });
    }
    startEditing(args, findExtension) {
        args.createImmediately = false;
        this.updatePropertiesTabs(args.requestRecalculation, findExtension);
    }
}
