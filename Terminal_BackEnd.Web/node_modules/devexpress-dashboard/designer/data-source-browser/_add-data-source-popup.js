/**
* DevExpress Dashboard (_add-data-source-popup.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ModelSerializer } from '@devexpress/analytics-core/analytics-utils';
import * as ko from 'knockout';
import { getLocalizationById } from '../../data/localization/_default';
import { Dashboard } from '../../model/dashboard';
export class AddDataSourcePopup {
    constructor(accessibleDataSourcesExtension, dataSourceFilter, addDataSourcesCallback, popupVisible) {
        this.title = getLocalizationById('DashboardWebStringId.DataSources.AddDataSource');
        this.toolbarItems = [];
        this.addButtonDisable = ko.computed(() => { return accessibleDataSourcesExtension && accessibleDataSourcesExtension().selectedDataSources().length === 0; });
        this.template = accessibleDataSourcesExtension().templateName;
        this.bindingData = accessibleDataSourcesExtension().viewModel;
        this.dataSourcesFilter = dataSourceFilter;
        this.toolbarItems = [{
                toolbar: 'bottom',
                location: 'after',
                widget: 'dxButton',
                disabled: this.addButtonDisable,
                options: {
                    text: getLocalizationById('DashboardWebStringId.DataSources.IncludeToTheDashboard'),
                    type: 'default',
                    onClick: () => {
                        addDataSourcesCallback(accessibleDataSourcesExtension().selectedDataSources().map(dataSource => {
                            return Dashboard._createDataSource(new ModelSerializer({ useRefs: false }).serialize(dataSource), new ModelSerializer());
                        }));
                        popupVisible(false);
                    }
                }
            },
            {
                toolbar: 'bottom',
                location: 'after',
                widget: 'dxButton',
                options: {
                    text: getLocalizationById('DashboardWebStringId.DataSources.Cancel'),
                    onClick: () => { popupVisible(false); }
                }
            }];
    }
}
