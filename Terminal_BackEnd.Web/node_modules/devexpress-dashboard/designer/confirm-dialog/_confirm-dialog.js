/**
* DevExpress Dashboard (_confirm-dialog.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { createJQueryDeferred } from '../../data/_jquery-helpers';
import { type } from '../../data/_utils';
export class ConfirmDialogViewModel {
    constructor() {
        this.confirmTitle = ko.observable('');
        this.confirmText = ko.observable('');
        this.confirmVisible = ko.observable(false);
        this.confirmButtons = ko.observable([]);
        this.confirmHidden = (e) => { };
    }
    confirm(title, message, okButtonText, cancelButtonText) {
        var deferred = createJQueryDeferred();
        this.confirmTitle(title);
        this.confirmText(message);
        let buttons = [];
        if (type.isDefined(okButtonText))
            buttons.push({
                toolbar: 'bottom', location: 'after', widget: 'dxButton', options: {
                    text: okButtonText,
                    type: 'default',
                    onClick: () => {
                        setTimeout(() => { this.confirmVisible(false); }, 1);
                        deferred.resolve(true);
                    }
                }
            });
        if (type.isDefined(cancelButtonText))
            buttons.push({
                toolbar: 'bottom', location: 'after', widget: 'dxButton', options: {
                    text: cancelButtonText,
                    onClick: () => {
                        setTimeout(() => { this.confirmVisible(false); }, 1);
                        deferred.resolve(false);
                    }
                }
            });
        this.confirmButtons(buttons);
        this.confirmHidden = (e) => {
            if (deferred.state() === 'pending')
                deferred.reject();
        };
        this.confirmVisible(true);
        return deferred.promise();
    }
}
