/**
* DevExpress Dashboard (_simple-filter-editor.js)
* Version:  23.2.7
* Build date: Jun 25, 2024
* Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { getLocalizationById } from '../../../data/localization/_default';
import { DisposableObject } from '../../../model/disposable-object';
import { FilterFieldSelector } from './_filter-field-wrapper';
import { SimpleFilterTreeList } from './_simple-filter-tree-list';
export class SimpleFilterEditor extends DisposableObject {
    constructor(dashboardItem, dataSourceBrowser) {
        super();
        this.dashboardItem = dashboardItem;
        this.dataSourceBrowser = dataSourceBrowser;
        this.popupVisible = ko.observable(false);
        this._filterTreeList = new SimpleFilterTreeList(dashboardItem, dataSourceBrowser);
        this._fieldSelector = new FilterFieldSelector(dashboardItem, dataSourceBrowser, (field) => {
            this._filterTreeList.reload(field);
        });
        this._fieldSelector.init();
        this.viewModel = {
            getPopupOptions: (container) => {
                return {
                    target: container,
                    container: container,
                    position: {
                        my: 'center',
                        at: 'center',
                        boundary: container
                    },
                    height: '50%',
                    width: '50%',
                    minHeight: '250px',
                    minWidth: '250px',
                    animation: {},
                    focusStateEnabled: true,
                    resizeEnabled: true,
                    hideOnOutsideClick: false,
                    toolbarItems: [
                        { toolbar: 'bottom',
                            location: 'after',
                            widget: 'dxButton',
                            options: {
                                text: getLocalizationById('DashboardWebStringId.DataSources.Save'),
                                onClick: () => this._applyHandler()
                            }
                        },
                        { toolbar: 'bottom',
                            location: 'after',
                            widget: 'dxButton',
                            options: {
                                text: getLocalizationById('DashboardWebStringId.DataSources.Cancel'),
                                onClick: () => { this._onPopupHidden(); }
                            }
                        }
                    ],
                    onHidden: () => this._onPopupHidden(),
                    onShown: () => this._onPopupShown(),
                    visible: this.popupVisible,
                    shadingColor: 'rgba(0, 0, 0, 0.2)',
                    showTitle: true,
                    title: getLocalizationById('DataAccessUIStringId.FiltersView'),
                    wrapperAttr: {
                        class: 'dx-filter-popup dx-dashboard-typography dx-dashboard-simple-filter'
                    }
                };
            },
            fieldSelector: this._fieldSelector,
            filterTreeList: this._filterTreeList
        };
    }
    _onPopupHidden() {
        this.popupVisible(false);
        this._filterTreeList.hide();
    }
    _onPopupShown() {
        this._filterTreeList.show(this._fieldSelector.selectedField);
    }
    _applyHandler() {
        if (!!this._fieldSelector.selectedField) {
            this.dataSourceBrowser.getDimensionFilterString(this.dashboardItem, this._fieldSelector.selectedField.dataMember(), this._filterTreeList.getTreeListItems().map(i => i.data)).done(filterString => {
                this.dashboardItem.filterString(filterString);
            });
        }
        this.popupVisible(false);
    }
    dispose() {
        super.dispose();
        this._fieldSelector.dispose();
        this._filterTreeList.dispose();
    }
}
