import { SubDocumentInfoType } from '../../../../core/model/enums';
import { NoteType } from '../../../../core/model/footnotes/footnote';
import { XmlReader } from '../../../zip/xml-reader';
import { ElementHandlerTable } from '../destination';
import { BodyDestinationBase } from '../document/body-destination-base';
export declare type NoteSubDocumentType = SubDocumentInfoType.FootNote | SubDocumentInfoType.EndNote;
export declare abstract class NoteDestination extends BodyDestinationBase {
    static handlerTable: ElementHandlerTable;
    protected get elementHandlerTable(): ElementHandlerTable;
    private id;
    private subDocId;
    private type;
    protected abstract get SubDocumentType(): NoteSubDocumentType;
    processElementOpen(reader: XmlReader): Promise<void>;
    processElementClose(_reader: XmlReader): Promise<void>;
    private createSubDocument;
    protected abstract addNote(id: string, subDocId: number, type: NoteType): boolean;
}
//# sourceMappingURL=note-destination.d.ts.map