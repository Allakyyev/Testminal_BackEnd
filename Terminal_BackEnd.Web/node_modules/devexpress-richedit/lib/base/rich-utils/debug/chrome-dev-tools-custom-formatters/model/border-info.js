import { BorderInfo } from '../../../../../core/model/borders/border-info';
import { BorderLineStyle } from '../../../../../core/model/borders/enums';
import { Pair } from '@devexpress/utils/lib/class/pair';
import { UnitConverter } from '@devexpress/utils/lib/class/unit-converter';
import { BaseFormatter, StdProps } from '../base-formatter';
export class CCF_BorderInfo extends BaseFormatter {
    isHandleObject(obj) {
        return obj instanceof BorderInfo;
    }
    getShortDescription(_config) {
        const list = [
            new Pair("width", `${this.curr.width}(${UnitConverter.twipsToPixels(this.curr.width)}px)`),
            new Pair("style", BorderLineStyle[this.curr.style]),
            new Pair("", BaseFormatter.getColorBoxNode(this.model.colorProvider.getRgbaFromModelColor(this.curr.color))),
        ];
        return this.stdShow(new StdProps(list).showAsLine());
    }
    availableFullDescription(_config) {
        return true;
    }
    getFullDescription(_config) {
        const list = [
            new Pair("width", `${this.curr.width}(${UnitConverter.twipsToPixels(this.curr.width)}px)`),
            new Pair("style", BorderLineStyle[this.curr.style]),
            new Pair("colorIndex", BaseFormatter.getColorBoxNode(this.model.colorProvider.getRgbaFromModelColor(this.curr.color))),
            new Pair("frame", this.curr.frame),
            new Pair("offset", this.curr.offset),
            new Pair("shadow", this.curr.shadow),
        ];
        return this.stdShow(new StdProps(list).showAsColumn());
    }
}
CCF_BorderInfo._foo = BaseFormatter.addToFormattersList(new CCF_BorderInfo());
