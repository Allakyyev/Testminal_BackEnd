@model Terminal_BackEnd.Web.Services.Model.EncashmentViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@inject IHtmlLocalizer<SharedResource> SharedLocalizer
@{
    ViewData["Title"] = SharedLocalizer["Encashment Details"];
}
<section class="section">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@SharedLocalizer["Информация о инкассации"]: <strong>ID @Model.Id</strong> @(Model.Status == Terminal_BackEnd.Infrastructure.Entities.EncashmentStatus.Open ? "Open" :"Closed")</strong></h5>
                    <form class="row g-3">
                        <div class="col-md-3">
                            <label for="validationDefault01" class="form-label">@SharedLocalizer["Дата инкассации"]</label>
                            <input type="text" class="form-control" value="@Model.EncashmentDate" required disabled>
                        </div>
                        <div class="col-md-3">
                            <label for="validationDefault02" class="form-label">@SharedLocalizer["Сумма"]</label>
                            <input type="text" class="form-control" id="validationDefault02" value="@(Model.EncashmentSum) TMT" required disabled>
                        </div>
                        <div class="col-md-3">
                            <label for="validationDefault02" class="form-label">@SharedLocalizer["Имя терминала"]</label>
                            <input type="text" class="form-control" value="@(Model.TerminalName)" required disabled>
                        </div>
                        <div class="col-md-3">
                            <label for="validationDefault02" class="form-label">@SharedLocalizer["Дилер"]</label>
                            <input type="text" class="form-control" value="@(Model.TerminalOwner)" required disabled>
                        </div>
                        @if(Model.Status == Terminal_BackEnd.Infrastructure.Entities.EncashmentStatus.Close) {
                            <div class="col-md-3">
                                <label for="validationDefault02" class="form-label">@SharedLocalizer["Физическая Сумма"]</label>
                                <input type="text" class="form-control" value="@(Model.EncashmentSumFromTerminal)" required disabled>
                            </div>
                        }

                        <div class="row g-3">
                            <div class="col-md-2">
                                <label for="validationDefault02" class="form-label">@SharedLocalizer["Физическая Сумма"]</label>
                                <input type="number" min="1" id="sumFromTerm" class="form-control" value="@(Model.EncashmentSumFromTerminal)" required>
                            </div>
                            <div class="col-md-4">
                                <label for="validationDefault02" class="form-label">@SharedLocalizer["Заметка"]</label>
                                <div id="remark"></div>
                            </div>
                            @if (User.IsInRole("Cashier") && Model.Status == Terminal_BackEnd.Infrastructure.Entities.EncashmentStatus.Open)
                            {
                                <div class="col-md-4" style="align-content: flex-end">
                                    <div id="closeButton"></div>
                                </div>
                            }else {

                                <div class="col-md-4" style="align-content: flex-end">
                                    <div id="editButton"></div>
                                </div>

                            }
                        </div>                        
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@SharedLocalizer["Транзакции"]</h5>
                    <div id="gridContainer">
                    </div>
                </div>
            </div>
        </div>
    </div     
</section>
@section Scripts {
    <script>
        performActionAndRedirect("Encashments");
        $(function () {
            let url = window.location.origin + '/' + 'api/TransactionsAPI/EncashmentTransactions/' + @(Model.Id);
            var returnUrl = '@Context.Request.Path@Context.Request.QueryString';
            $("#gridContainer").dxDataGrid({
                dataSource: DevExpress.data.AspNet.createStore({
                    key: "id",
                    loadUrl: url,
                    insertUrl: url,
                    updateUrl: url,
                    deleteUrl: url,
                    onBeforeSend: function (method, ajaxOptions) {
                        ajaxOptions.xhrFields = { withCredentials: true };
                    }
                }),
                onExporting: function (e) {
                    var workbook = new ExcelJS.Workbook();
                    var worksheet = workbook.addWorksheet('Main sheet');
                    DevExpress.excelExporter.exportDataGrid({
                        worksheet: worksheet,
                        component: e.component,
                        customizeCell: function (options) {
                            options.excelCell.font = { name: 'Arial', size: 12 };
                            options.excelCell.alignment = { horizontal: 'left' };
                        }
                    }).then(function () {
                        workbook.xlsx.writeBuffer().then(function (buffer) {
                            saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'DataGrid.xlsx');
                        });
                    });
                },
                onInitNewRow: function (e) {
                    var url = `@Url.Action("Create", "Terminal")`;
                    window.location = url;
                },
                selection: {
                    mode: "multiple"
                },
                allowColumnReordering: true,
                allowColumnResizing: true,
                "export": {
                    enabled: true,
                    fileName: "Documents",
                    allowExportSelectedData: true
                },
                filterPanel: {
                    visible: false
                },
                filterRow: { visible: false },
                remoteOperations: true,
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [10, 20, 50],
                    showNavigationButtons: true
                },
                editing: {
                    useIcons: true,
                    allowUpdating: false,
                    allowDeleting: false,
                    allowAdding: false
                },
                headerFilter: {
                    visible: true
                },
                wordWrapEnabled: true,
                showColumnLines: true,
                showRowLines: true,
                rowAlternationEnabled: true,
                showBorders: true,
                searchPanel: {
                    visible: true
                },

                stateStoring: {
                    enabled: true,
                    type: "localStorage",
                    storageKey: "EncashmentTransactions"
                },

                columns: [
                    {
                        caption: '@SharedLocalizer["ID транзакции"]',
                        dataField: "id",
                        allowHeaderFiltering: true
                    },
                    {
                        caption: '@SharedLocalizer["Телефон"]',
                        dataField: "msisdn",
                        allowHeaderFiltering: true
                    },
                    {
                        caption: '@SharedLocalizer["Сумма(TMT)"]',
                        dataField: "amount",
                        allowHeaderFiltering: true,
                        width: 100
                    },
                    {
                        caption: '@SharedLocalizer["Дата транзакции"]',
                        dataField: "transactionDate",
                        dataType: 'date',
                        format: "dd/MM/yyyy HH:mm",
                        allowHeaderFiltering: true,
                    },
                    {
                        caption: '@SharedLocalizer["RefNum"]',
                        dataField: "refNum",
                        allowHeaderFiltering: true,
                    },
                    {
                        caption: '@SharedLocalizer["Статус"]',
                        dataField: "status",
                        allowHeaderFiltering: true,
                    },
                    {
                        caption: '@SharedLocalizer["Состояние"]',
                        dataField: "state",
                        allowHeaderFiltering: true,
                    },
                    {
                        caption: '@SharedLocalizer["Причина"]',
                        dataField: "reason",
                        allowHeaderFiltering: true,
                    },
                    {
                        caption: '@SharedLocalizer["ID терминала"]',
                        dataField: "terminalId",
                        allowHeaderFiltering: true,
                    },                    
                    {
                        type: "buttons",
                        width: 110,
                        buttons: [
                            {
                                hint: '@SharedLocalizer["Подробнее"]',
                                icon: "info",
                                onClick: function (e) {
                                    var idString = e.row.data.id;
                                    var url = `@Url.Action("TransactionDetails", "Transaction")`;
                                    window.location = url + '?id=' + idString;
                                }
                            }
                        ]
                    }
                ],
                summary: {
                      totalItems: [
                        {
                            column: 'amount',
                            summaryType: 'sum',
                            customizeText(itemInfo) {
                                return `Сумма продаж.: ${itemInfo.value} man.`;
                            }
                        }
                      ]
                }
            });
            
            let storedValues = JSON.parse(localStorage.getItem('autocompleteValues')) || [];
            let remark = @Html.Raw(Json.Serialize(Model.Remarks));
            $("#remark").dxAutocomplete({
                dataSource: storedValues,
                value: @Html.Raw(Json.Serialize(Model.Remarks)),
                minSearchLength: 1,                     
                placeholder: "Enter text...",
                showClearButton: true,
                onValueChanged: function(e) {
                    remark = e.value.trim();
                }
            });

            let closeUrl = window.location.origin + '/' + 'api/TransactionsAPI/CloseEncashment';
            $("#closeButton").dxButton({
                text: '@SharedLocalizer["Закрыть инкассацию"]',
                type: "success",
                useSubmitBehavior: false,
                onClick: function() {
                    let sum = $("#sumFromTerm").val();                    
                    storedValues.push(remark);
                    localStorage.setItem('autocompleteValues', JSON.stringify(storedValues));
                $.ajax({
                    url: closeUrl,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        id: @Model.Id,
                        sumFromTerm: sum,
                        remark: remark
                    }),
                    success: function(response) {
                        alert("Инкассации закрыта успешно!");
                        window.location.href = window.location.pathname + '?id=' + '@(Model.Id)';
                    },
                    error: function(error) {
                        alert("Произошла ошибка!!");
                    }
                });
            }
            });

            $("#editButton").dxButton({
                text: '@SharedLocalizer["Сохранить"]',
                type: "success",
                useSubmitBehavior: false,
                onClick: function() {
                    let sum = $("#sumFromTerm").val();                    
                    storedValues.push(remark);
                    localStorage.setItem('autocompleteValues', JSON.stringify(storedValues));
                $.ajax({
                    url: closeUrl,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        id: @Model.Id,
                        sumFromTerm: sum,
                        remark: remark
                    }),
                    success: function(response) {
                        alert("Инкассации закрыта успешно!");
                        window.location.href = window.location.pathname + '?id=' + '@(Model.Id)';
                    },
                    error: function(error) {
                        alert("Произошла ошибка!!");
                    }
                });
            }
            });
        });
    </script>
}

