@model Terminal_BackEnd.Infrastructure.ViewModel.TopUpViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@inject IHtmlLocalizer<SharedResource> SharedLocalizer

@{
    ViewData["Title"] = SharedLocalizer["Пополнить"];
}

<div class="container-fluid">
    <div class="col-lg-12">
        <div class="row">
            <h1 class="page-header">
                @SharedLocalizer["Баланс Дилера"]
            </h1>
        </div>
    </div>
    <div>
        <form asp-action="AddTopup" id="form" enctype="multipart/form-data">
            <input type="hidden" asp-for="UserId" value="@Model.UserId" />
            <div class="col-md-12">
                <div class="form-row">
                    <div class="col-md-8">
                        <h1 class="page-header">
                            @SharedLocalizer["Пополнить баланс в"] @ViewBag.UserName
                        </h1>
                        <h2 class="page-header">
                            @SharedLocalizer["Текущий баланс"]: @Model.CurrentTotal
                        </h2>
                        <div class="form-group">
                            <label>@SharedLocalizer["Сумма"] *</label>
                            <input type="number" class="form-control" asp-for="TopupSum" value="@Model.TopupSum" required />
                        </div>
                    </div>
                </div>
            </div>
            <div class="dx-fieldset">
                <br />
                <div id="summary"></div>
                <br />
                <div id="button"></div>
            </div>
        </form>
    </div>
    <div id="gridContainer"></div>
</div>

@section Scripts
{
    <script>
        performActionAndRedirect("ApplicationUser");
        $(function () {           
            $("#button").dxButton({
                text: '@SharedLocalizer["Пополнить"]',
                type: "success",
                useSubmitBehavior: true,
            });
            $("#summary").dxValidationSummary({});

        });
        $(function () {
            let url = window.location.origin + '/' + 'api/ApplicationUserAPI/Topups/' + encodeURIComponent('@(Model.UserId)');
            var returnUrl = '@Context.Request.Path@Context.Request.QueryString';
            $("#gridContainer").dxDataGrid({
                dataSource: DevExpress.data.AspNet.createStore({
                    key: "id",
                    loadUrl: url,
                    insertUrl: url,
                    updateUrl: url,
                    deleteUrl: url,
                    onBeforeSend: function (method, ajaxOptions) {
                        ajaxOptions.xhrFields = { withCredentials: true };
                    }
                }),
                onExporting: function (e) {
                    var workbook = new ExcelJS.Workbook();
                    var worksheet = workbook.addWorksheet('Main sheet');
                    DevExpress.excelExporter.exportDataGrid({
                        worksheet: worksheet,
                        component: e.component,
                        customizeCell: function (options) {
                            options.excelCell.font = { name: 'Arial', size: 12 };
                            options.excelCell.alignment = { horizontal: 'left' };
                        }
                    }).then(function () {
                        workbook.xlsx.writeBuffer().then(function (buffer) {
                            saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'DataGrid.xlsx');
                        });
                    });
                },                
                selection: {
                    mode: "multiple"
                },
                "export": {
                    enabled: true,
                    fileName: "Documents",
                    allowExportSelectedData: true
                },
                filterPanel: {
                    visible: false
                },
                filterRow: { visible: false },
                remoteOperations: true,
                allowColumnResizing: true,
                onRowUpdating: function (e) {
                    e.newData = Object.assign(e.oldData, e.newData)
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [10, 20, 50],
                    showNavigationButtons: true
                },
                editing: {
                    useIcons: true,
                    allowUpdating: false,
                    allowDeleting: false,
                    allowAdding: false
                },
                headerFilter: {
                    visible: true
                },
                wordWrapEnabled: true,
                showColumnLines: true,
                showRowLines: true,
                rowAlternationEnabled: true,
                showBorders: true,
                searchPanel: {
                    visible: true
                },
                columns: [
                    {
                        caption: '@SharedLocalizer["Дата пополнения"]',
                        dataField: "topupDate",
                        dataType: "datetime",
                        allowHeaderFiltering: false
                    },
                    {
                        caption: '@SharedLocalizer["Сумма пополнения"]',
                        dataField: "topupSum",
                        allowHeaderFiltering: true
                    }                
                ]
            });

        });
    </script>
}